#N canvas 29 145 1156 788 10;
#N canvas 641 221 450 310 parse-osc-message 0;
#X obj 10 13 inlet;
#N canvas 406 148 450 300 count-address-components 0;
#X obj 15 8 inlet;
#X obj 15 250 outlet;
#X obj 330 251 outlet;
#X obj 129 72 t l;
#X obj 49 94 sel 47;
#X obj 49 116 f;
#X obj 79 116 + 1;
#X msg 66 51 0;
#X obj 49 72 list split 1;
#X obj 15 30 t a b a b;
#X obj 32 138 f;
#X connect 0 0 9 0;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 0 10 1;
#X connect 6 0 5 1;
#X connect 7 0 5 1;
#X connect 8 0 4 0;
#X connect 8 1 3 0;
#X connect 9 0 1 0;
#X connect 9 1 10 0;
#X connect 9 2 8 0;
#X connect 9 3 7 0;
#X connect 10 0 2 0;
#X restore 10 35 pd count-address-components;
#X obj 10 154 list split;
#X obj 10 101 route syncjams;
#X obj 10 79 list trim;
#X obj 10 57 oscparse;
#X obj 10 204 list split 1;
#X obj 10 240 outlet action;
#X obj 101 240 outlet address;
#X obj 198 240 outlet data;
#X obj 91 79 r \$0/argument/namespace;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 1 1 2 1;
#X connect 2 0 6 0;
#X connect 2 1 9 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 10 0 3 1;
#X restore 829 93 pd parse-osc-message;
#X obj 829 70 netreceive -u -b 23232;
#X obj 13 10 inlet;
#N canvas 701 142 342 652 parse-named-arguments 0;
#X obj 11 11 loadbang;
#X obj 38 85 list split 1;
#X obj 121 85 t l;
#X text 153 84 <- serialize;
#X obj 57 165 list fromsymbol;
#X obj 78 211 list split 1;
#X obj 159 211 t l;
#X obj 78 278 list append;
#X obj 153 278 t l;
#X obj 57 304 list;
#X obj 57 187 t b a b;
#X obj 57 331 list tosymbol;
#X obj 38 408 list;
#X obj 140 374 t l;
#X obj 57 353 list;
#X obj 38 111 t b a b;
#X obj 57 140 symbol;
#X obj 57 374 list append;
#X obj 38 429 list trim;
#X obj 78 255 t b b b;
#X obj 78 233 sel 61;
#X obj 38 63 list append \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8;
#X obj 38 451 route bang;
#X obj 71 11 inlet;
#X obj 95 475 list split 1;
#X obj 95 503 list prepend;
#X obj 95 525 list prepend \$0;
#X obj 11 33 t b b;
#X obj 11 575 \$0;
#X msg 11 597 \; \$1/arguments-loaded bang;
#X msg 95 547 \; \$1/\$3 \$2;
#X connect 0 0 27 0;
#X connect 1 0 15 0;
#X connect 1 1 2 0;
#X connect 2 0 1 0;
#X connect 4 0 10 0;
#X connect 5 0 20 0;
#X connect 5 1 6 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 7 0 9 1;
#X connect 8 0 7 1;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 10 1 5 0;
#X connect 10 2 7 1;
#X connect 11 0 14 0;
#X connect 12 0 18 0;
#X connect 13 0 17 1;
#X connect 14 0 17 0;
#X connect 15 0 12 0;
#X connect 15 1 16 0;
#X connect 15 2 17 1;
#X connect 16 0 4 0;
#X connect 17 0 13 0;
#X connect 17 0 12 1;
#X connect 18 0 22 0;
#X connect 19 0 9 1;
#X connect 19 1 9 0;
#X connect 19 2 7 1;
#X connect 20 0 19 0;
#X connect 20 1 7 0;
#X connect 21 0 1 0;
#X connect 22 1 24 0;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 25 1;
#X connect 25 0 26 0;
#X connect 26 0 30 0;
#X connect 27 0 28 0;
#X connect 27 1 21 0;
#X connect 28 0 29 0;
#X restore 508 64 pd parse-named-arguments;
#X msg 508 43 bang;
#N canvas 107 138 450 318 msg-tick 0;
#X obj 9 11 inlet;
#X obj 9 56 list;
#X obj 207 17 r \$0/syncjams/node-id;
#X obj 71 17 r \$0/syncjams/data;
#X obj 43 166 list split 3;
#X obj 9 128 list split 1;
#X text 95 124 first element = what node-id thinks current tick is
, f 29;
#X text 128 159 next three elements are state checksum, f 23;
#X obj 77 196 list split 2;
#X obj 157 196 t l;
#X text 187 191 remaining elements are last message ids for each node
, f 28;
#N canvas 525 335 365 300 handle-network-tick 0;
#X obj 13 8 inlet;
#X obj 28 52 r \$0/tick;
#X obj 13 76 >;
#X text 113 33 if a tick from the network is higher than our current
tick then bash our own tick into the new sync., f 32;
#X obj 13 98 sel 1;
#X obj 13 30 t f f;
#X obj 13 120 f;
#X obj 13 142 s \$0/tick-bash;
#X connect 0 0 5 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 2 0;
#X connect 5 1 6 1;
#X connect 6 0 7 0;
#X restore 9 269 pd handle-network-tick;
#N canvas 2 48 450 300 handle-state-checksum 0;
#X obj 12 10 inlet;
#X restore 43 244 pd handle-state-checksum;
#N canvas 2 48 450 300 handle-message-ids 0;
#X obj 6 9 inlet;
#X restore 77 218 pd handle-message-ids;
#N canvas 2 48 450 300 update-last-seen 0;
#X obj 9 8 inlet;
#X obj 43 76 map-api \$0/last-seen;
#X obj 43 52 list prepend get;
#X obj 43 98 > 0;
#X obj 9 263 map-api \$0/last-seen;
#X obj 72 198 timer;
#X obj 9 219 list append;
#X obj 9 241 list prepend set;
#X obj 43 142 f;
#X obj 9 30 t f b f f;
#X obj 43 164 s \$0/joined;
#X obj 43 120 sel 0;
#X text 122 151 notify user with "joined" callback if first seen node-id
, f 35;
#X text 144 263 add/update their node-id time in last-seen map;
#X connect 0 0 9 0;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 11 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 7 0 4 0;
#X connect 8 0 10 0;
#X connect 9 0 6 0;
#X connect 9 1 5 1;
#X connect 9 2 2 0;
#X connect 9 3 8 1;
#X connect 11 0 8 0;
#X restore 142 86 pd update-last-seen;
#X obj 142 66 f;
#X obj 9 33 t b b;
#X text 265 75 check if node joined \, update last-seen map., f 22
;
#X connect 0 0 16 0;
#X connect 1 0 5 0;
#X connect 2 0 15 1;
#X connect 3 0 1 1;
#X connect 4 0 12 0;
#X connect 4 1 8 0;
#X connect 5 0 11 0;
#X connect 5 1 4 0;
#X connect 8 0 13 0;
#X connect 8 1 9 0;
#X connect 9 0 8 0;
#X connect 15 0 14 0;
#X connect 16 0 1 0;
#X connect 16 1 15 0;
#X restore 829 447 pd msg-tick;
#X obj 886 303 list append;
#N canvas 51 198 450 300 msg-leave 0;
#X obj 9 10 inlet;
#X obj 54 10 r \$0/syncjams/node-id;
#X obj 9 63 s \$0/forget-node;
#X obj 9 43 f;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 3 0 2 0;
#X restore 843 416 pd msg-leave;
#N canvas 208 184 450 300 msg-message 0;
#X obj 6 6 inlet address;
#X obj 6 30 re-slash-osc-address;
#X obj 148 6 r \$0/syncjams/node-id;
#X obj 297 7 r \$0/syncjams/data;
#X obj 85 164 list append;
#X obj 297 29 list split 1;
#X text 227 43 message id;
#X obj 85 189 s \$0/message;
#X obj 85 142 list prepend;
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 2 0 8 1;
#X connect 3 0 5 0;
#X connect 4 0 7 0;
#X connect 5 1 4 1;
#X connect 8 0 4 0;
#X restore 886 331 pd msg-message;
#N canvas 2 48 450 300 msg-state-hash 0;
#X obj 9 10 inlet;
#X obj 317 10 r \$0/syncjams/data;
#X obj 131 10 r \$0/syncjams/node-id;
#X restore 857 386 pd msg-state-hash;
#N canvas 284 139 450 300 msg-state 0;
#X obj 9 10 inlet;
#X restore 871 357 pd msg-state;
#N canvas 103 286 334 101 change-port 0;
#X msg 10 30 port \$1;
#X obj 10 52 outlet;
#X obj 10 8 r \$0/argument/port;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X restore 829 47 pd change-port;
#N canvas 582 203 756 703 syncjams-sender 0;
#X obj 11 9 inlet;
#X obj 180 276 t f f;
#X obj 270 276 t f f;
#X obj 279 228 spigot 0;
#X obj 190 227 spigot 0;
#X obj 180 318 s \$1/connected;
#X obj 11 58 list prepend send;
#X obj 11 103 t a a;
#X obj 11 80 list trim;
#X obj 180 297 pipe 1;
#X obj 270 254 netsend -u -b;
#X obj 180 254 netsend -u -b;
#N canvas 683 210 450 300 oscformat 0;
#X obj 10 5 inlet;
#X obj 10 250 outlet;
#X obj 10 29 list split 1;
#X obj 10 104 list;
#X obj 10 51 t b a;
#X obj 10 227 oscformat -b i;
#X obj 170 53 r \$0/argument/namespace;
#X obj 47 77 list prepend syncjams;
#X msg 47 104 set /\$1\$2;
#X obj 144 140 print OSC;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 1;
#X connect 3 0 5 0;
#X connect 3 0 9 0;
#X connect 4 0 3 0;
#X connect 4 1 7 0;
#X connect 5 0 1 0;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 8 0 5 0;
#X connect 8 0 9 0;
#X restore 11 35 pd oscformat;
#X msg 270 161 connect 192.168.43.255 23232;
#X msg 180 138 connect 255.255.255.255 23232;
#X obj 180 51 r \$0/arguments-loaded;
#X obj 180 95 23232;
#X obj 180 116 t f f;
#X obj 207 73 r \$0/argument/port;
#X connect 0 0 12 0;
#X connect 1 0 9 0;
#X connect 1 1 4 1;
#X connect 2 0 9 0;
#X connect 2 1 3 1;
#X connect 3 0 10 0;
#X connect 4 0 11 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 3 0;
#X connect 8 0 7 0;
#X connect 9 0 5 0;
#X connect 10 0 2 0;
#X connect 11 0 1 0;
#X connect 12 0 6 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 14 0;
#X connect 17 1 13 0;
#X connect 18 0 16 1;
#X restore 829 748 pd syncjams-sender;
#X text 506 11 distribute arguments passed in by the user., f 25;
#X text 826 11 routing of incoming syncjams osc messages from the network
, f 30;
#X obj 829 165 route tick leave state-hash state, f 10;
#X obj 829 115 list trim;
#X text 368 163 data stores;
#N canvas 186 197 450 300 node-id 0;
#X obj 14 14 r \$0/arguments-loaded;
#X obj 14 36 uid;
#X obj 14 59 s \$0/node-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 370 337 pd node-id;
#N canvas 62 86 450 300 metronome 0;
#X obj 50 177 + 1;
#X obj 20 177 f;
#X obj 20 199 s \$0/tick;
#X obj 20 29 r \$0/tick-bash;
#X obj 20 51 t b f;
#X obj 95 110 r \$0/argument/bpm;
#X obj 95 132 expr 60000 / $f1;
#X obj 20 155 metro 333.333;
#X obj 258 31 r \$0/arguments-loaded;
#X msg 258 53 0;
#X obj 258 75 s \$0/tick-bash;
#X connect 0 0 1 1;
#X connect 1 0 0 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 4 1 1 1;
#X connect 5 0 6 0;
#X connect 6 0 7 1;
#X connect 7 0 1 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X restore 370 438 pd metronome;
#X text 368 419 core timing;
#X obj 15 758 outlet;
#X text 368 474 procedures;
#N canvas 339 194 450 300 forget-nodes 0;
#X obj 13 14 r \$0/forget-nodes;
#X obj 13 114 r \$0/forget-node;
#X restore 370 492 pd forget-nodes;
#X obj 946 115 list split 1;
#X obj 980 140 s \$0/syncjams/data;
#X obj 946 187 s \$0/syncjams/node-id;
#X text 12 513 outgoing api;
#X obj 13 229 route get-node-id;
#X obj 13 129 route get-state;
#X obj 13 279 route set-state;
#X obj 13 179 route get-node-list;
#X obj 13 329 route send;
#N canvas 2 50 450 300 get-state 0;
#X obj 13 10 inlet;
#X restore 13 151 pd get-state;
#N canvas 2 48 450 300 set-state 0;
#X obj 9 8 inlet;
#X obj 9 35 list split 1;
#X obj 43 108 list prepend;
#X obj 121 79 timer;
#X obj 94 35 r \$0/tick;
#X obj 43 130 list prepend;
#X obj 94 57 t f b;
#X obj 43 57 t a b;
#X text 58 8 /address last_tick time_since_last_tick val1 val2 val3
...;
#X text 127 109 time since last tick;
#X text 129 130 last tick;
#X obj 9 185 list append;
#X obj 9 207 s \$0/state-outgoing;
#X msg 9 161 list /state\$1;
#X connect 0 0 1 0;
#X connect 1 0 13 0;
#X connect 1 1 7 0;
#X connect 2 0 5 0;
#X connect 3 0 2 1;
#X connect 4 0 6 0;
#X connect 5 0 11 1;
#X connect 6 0 5 1;
#X connect 6 1 3 0;
#X connect 7 0 2 0;
#X connect 7 1 3 1;
#X connect 11 0 12 0;
#X connect 13 0 11 0;
#X restore 13 301 pd set-state;
#N canvas 2 50 450 300 get-node-list 0;
#X obj 10 13 inlet;
#X restore 13 201 pd get-node-list;
#N canvas 80 262 450 300 get-node-id 0;
#X obj 13 13 inlet;
#X obj 13 35 f;
#X obj 13 57 s \$0/node-id;
#X obj 55 13 r \$0/node-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 1 1;
#X restore 13 251 pd get-node-id;
#N canvas 2 50 450 300 send 0;
#X obj 11 11 inlet;
#X obj 11 35 s \$0/message-outgoing;
#X connect 0 0 1 0;
#X restore 13 351 pd send;
#X text 31 35 incoming api: get-state set-state get-node-list get-node-id
send, f 14;
#X text 247 28 optional arguments: bpm=180 initial=text-object-name
namespace=syncjams port=23232, f 25;
#X obj 15 534 syncjams-out \$0 tick;
#X obj 25 562 syncjams-out \$0 node-id;
#X obj 35 592 syncjams-out \$0 message;
#X obj 45 622 syncjams-out \$0 state;
#X obj 55 652 syncjams-out \$0 joined;
#X obj 65 682 syncjams-out \$0 left;
#X obj 75 712 syncjams-out \$0 node-list;
#X text 180 562 my-node-id;
#X text 156 535 tick-number;
#X text 202 652 node-id;
#X text 203 682 node-id;
#X text 243 712 node-id-1 node-id-2 node-id-3...;
#X text 186 592 from-node-id /address-key message-values...;
#X text 185 622 from-node-id /address-key state-values...;
#X text 69 352 /address-key message-values...;
#X text 98 302 /address-key state-values...;
#X obj 15 737 list trim;
#N canvas 213 255 450 300 send-tick 0;
#X obj 12 270 outlet;
#X obj 13 13 r \$0/tick;
#X obj 13 35;
#X connect 1 0 2 0;
#X restore 845 683 pd send-tick;
#X obj 370 262 map \$0/sent-queue;
#N canvas 2 48 450 300 send-state-hash 0;
#X obj 9 274 outlet;
#X restore 861 712 pd send-state-hash;
#N canvas 39 556 450 473 _send 0;
#X obj 10 399 outlet;
#X obj 10 7 inlet;
#X obj 44 142 list prepend;
#X text 127 142 add new msg_id;
#X obj 44 194 list prepend;
#X obj 113 171 r \$0/node-id;
#X text 127 195 add node_id;
#X obj 49 338 map-api \$0/sent-queue;
#X obj 49 294 list prepend;
#X obj 113 119 r \$0/msg-id;
#X obj 71 90 s \$0/msg-id-bash;
#X obj 44 69 t a b;
#X obj 49 316 list prepend set;
#N canvas 351 114 450 405 clear-old-states 0;
#X obj 15 15 inlet;
#X obj 15 37 list split 1;
#X obj 15 107 map-api \$0/sent-queue;
#X msg 15 82 each;
#X obj 15 132 list split 1;
#X obj 15 196 <;
#X obj 30 174 - 100;
#X obj 15 59 t b f;
#X obj 15 154 t f f;
#X obj 15 238 f;
#X obj 15 286 map-api \$0/sent-queue;
#X obj 15 260 list prepend del;
#X obj 15 218 sel 1;
#X text 72 176 find any message older than msg_id - 100;
#X text 125 262 delete it;
#X text 98 36 get out latest msg_id;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 8 0;
#X connect 5 0 12 0;
#X connect 6 0 5 1;
#X connect 7 0 3 0;
#X connect 7 1 6 0;
#X connect 8 0 5 0;
#X connect 8 1 9 1;
#X connect 9 0 11 0;
#X connect 11 0 10 0;
#X connect 12 0 9 0;
#X restore 29 371 pd clear-old-states;
#X text 130 287 add to sent queue ordered by msg_id, f 19;
#X obj 10 256 t a a a;
#X obj 10 29 list split 1;
#X obj 10 231 list append;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 4 0 17 1;
#X connect 5 0 4 1;
#X connect 8 0 12 0;
#X connect 9 0 2 1;
#X connect 11 0 2 0;
#X connect 11 1 10 0;
#X connect 12 0 7 0;
#X connect 15 0 0 0;
#X connect 15 1 13 0;
#X connect 15 2 8 0;
#X connect 16 0 17 0;
#X connect 16 1 11 0;
#X connect 17 0 15 0;
#X restore 829 654 pd _send;
#X obj 848 621 r \$0/message-outgoing;
#X obj 829 577 r \$0/state-outgoing;
#X text 884 653 add node_id \, msg_id & add to sent-queue;
#N canvas 2 50 753 300 throttle-states 0;
#X obj 10 8 inlet;
#X obj 10 270 outlet;
#X obj 526 13 r \$0/tick;
#X text 590 12 retry throttled states;
#X connect 0 0 1 0;
#X restore 829 599 pd throttle-states;
#N canvas 2 50 450 300 msg-id 0;
#X obj 9 14 r \$0/msg-id-bash;
#X obj 9 36 f;
#X obj 39 36 + 1;
#X obj 9 58 s \$0/msg-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X restore 370 363 pd msg-id;
#X obj 370 236 map \$0/last-seen;
#X obj 370 185 map \$0/states;
#X obj 370 210 map \$0/last-messages;
#X obj 370 289 map \$0/throttle-queue;
#X obj 886 226 t a b;
#X obj 871 248 t a b;
#N canvas 2 48 450 300 update-last-msg-id 0;
#X obj 10 10 inlet;
#X obj 188 10 r \$0/syncjams/data;
#X obj 188 31 list split 1;
#X obj 51 10 r \$0/syncjams/node-id;
#X obj 51 68 list append;
#X obj 10 102 list;
#X obj 10 124 list prepend set;
#X obj 10 146 map-api \$0/last-messages;
#X text 174 120 update last-messages map with this node's last msg_id
, f 22;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X restore 913 272 pd update-last-msg-id;
#X text 501 208 node_id -> msg_id;
#X text 479 235 node_id -> timestamp;
#X text 463 184 address -> node_id msg_id tick timediff values...;
#X text 482 262 msg_id -> message...;
#X text 506 289 address-> timestamp message...;
#N canvas 16 71 450 300 state-checksum 0;
#X obj 16 16 r \$0/update-state-checksum;
#X msg 16 38 bang;
#X msg 16 60 each;
#X obj 16 82 map-api \$0/states;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X restore 370 389 pd state-checksum;
#X text 366 318 computed data;
#X connect 0 0 16 0;
#X connect 0 1 6 1;
#X connect 0 2 24 0;
#X connect 1 0 0 0;
#X connect 2 0 29 0;
#X connect 4 0 3 0;
#X connect 6 0 8 0;
#X connect 11 0 1 0;
#X connect 15 0 5 0;
#X connect 15 1 7 0;
#X connect 15 2 9 0;
#X connect 15 3 71 0;
#X connect 15 4 70 0;
#X connect 16 0 15 0;
#X connect 24 0 26 0;
#X connect 24 1 25 0;
#X connect 28 0 36 0;
#X connect 28 1 30 0;
#X connect 29 0 33 0;
#X connect 29 1 31 0;
#X connect 30 0 34 0;
#X connect 30 1 32 0;
#X connect 31 0 35 0;
#X connect 31 1 28 0;
#X connect 32 0 37 0;
#X connect 40 0 56 0;
#X connect 41 0 56 0;
#X connect 42 0 56 0;
#X connect 43 0 56 0;
#X connect 44 0 56 0;
#X connect 45 0 56 0;
#X connect 46 0 56 0;
#X connect 56 0 21 0;
#X connect 60 0 12 0;
#X connect 61 0 60 0;
#X connect 62 0 64 0;
#X connect 64 0 60 0;
#X connect 70 0 6 0;
#X connect 70 1 72 0;
#X connect 71 0 10 0;
#X connect 71 1 72 0;
