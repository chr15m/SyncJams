#N canvas 311 165 1209 687 10;
#N canvas 244 102 450 360 parse-osc-message 0;
#X obj 10 13 inlet;
#X obj 10 154 list split;
#X obj 10 133 route syncjams;
#X obj 10 109 list trim;
#X obj 10 57 oscparse;
#X obj 10 267 list split 1;
#X obj 10 303 outlet action;
#X obj 101 303 outlet address;
#X obj 198 303 outlet data;
#X obj 91 89 r \$0/argument/namespace;
#X obj 38 198 route v1;
#X obj 10 243 list;
#X obj 38 220 t b a;
#X obj 38 176 list trim;
#X obj 10 79 t a a;
#X obj 214 161 spigot 0;
#X obj 259 140 r \$0/debug;
#X obj 214 184 list split;
#X obj 214 206 re-slash-osc-address;
#X obj 214 228 list append;
#X obj 214 250 print RAW;
#X obj 271 161 + 1;
#X obj 91 111 symbol;
#N canvas 2 50 926 612 count-address-components 0;
#X obj 11 11 inlet;
#X obj 11 353 outlet;
#X obj 11 33 t a a;
#X obj 88 111 list split 1;
#X obj 168 111 t l;
#X obj 115 185 sel 0;
#X obj 88 215 sel 47;
#X obj 119 267 + 1;
#X msg 133 215 0;
#X obj 88 267 0;
#X obj 88 163 t f f;
#X obj 69 81 t b a b;
#X obj 69 293 f;
#X obj 69 315 outlet;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 1 11 0;
#X connect 3 0 10 0;
#X connect 3 1 4 0;
#X connect 4 0 3 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 7 0 9 1;
#X connect 8 0 9 1;
#X connect 9 0 7 0;
#X connect 9 0 12 1;
#X connect 10 0 6 0;
#X connect 10 1 5 0;
#X connect 11 0 12 0;
#X connect 11 1 3 0;
#X connect 11 2 8 0;
#X connect 12 0 13 0;
#X restore 10 34 pd count-address-components;
#X connect 0 0 23 0;
#X connect 1 0 11 0;
#X connect 1 1 13 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 14 0;
#X connect 5 0 6 0;
#X connect 5 1 7 0;
#X connect 9 0 22 0;
#X connect 10 0 12 0;
#X connect 11 0 5 0;
#X connect 12 0 11 1;
#X connect 12 1 8 0;
#X connect 13 0 10 0;
#X connect 14 0 3 0;
#X connect 14 1 15 0;
#X connect 15 0 17 0;
#X connect 16 0 15 1;
#X connect 17 0 18 0;
#X connect 17 1 19 1;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 21 0 17 1;
#X connect 22 0 2 1;
#X connect 23 0 4 0;
#X connect 23 1 21 0;
#X connect 23 1 1 1;
#X restore 829 105 pd parse-osc-message;
#X obj 13 10 inlet;
#N canvas 690 55 452 652 parse-named-arguments 0;
#X obj 11 11 loadbang;
#X obj 38 85 list split 1;
#X obj 121 85 t l;
#X text 153 84 <- serialize;
#X obj 77 219 list trim;
#X obj 77 241 route bang;
#X obj 71 11 inlet;
#X obj 134 265 list split 1;
#X obj 134 293 list prepend;
#X obj 134 315 list prepend \$0;
#X obj 11 33 t b b;
#X obj 11 575 \$0;
#X msg 11 597 \; \$1/arguments-loaded bang;
#X msg 134 337 \; \$1/argument/\$3 \$2;
#X obj 77 131 sel \,;
#X obj 38 63 list append \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8 \$9 \$10 \$11
\$12 \$13 \$14 \$15 \$16, f 66;
#X obj 38 108 route 0;
#X obj 178 175 t l;
#X obj 77 197 list;
#X obj 77 153 t b b;
#X obj 98 175 list append;
#X text 114 129 <- split on comma;
#X connect 0 0 10 0;
#X connect 1 0 16 0;
#X connect 1 1 2 0;
#X connect 2 0 1 0;
#X connect 4 0 5 0;
#X connect 5 1 7 0;
#X connect 6 0 10 0;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 8 0 9 0;
#X connect 9 0 13 0;
#X connect 10 0 11 0;
#X connect 10 1 15 0;
#X connect 11 0 12 0;
#X connect 14 0 19 0;
#X connect 14 1 20 0;
#X connect 15 0 1 0;
#X connect 16 1 14 0;
#X connect 17 0 20 1;
#X connect 18 0 4 0;
#X connect 19 0 18 0;
#X connect 19 1 20 1;
#X connect 20 0 17 0;
#X connect 20 0 18 1;
#X restore 492 32 pd parse-named-arguments;
#X msg 492 11 bang;
#N canvas 450 65 450 318 msg-tick 0;
#X obj 9 11 inlet;
#X obj 9 56 list;
#X obj 207 17 r \$0/syncjams/node-id;
#X obj 71 17 r \$0/syncjams/data;
#X obj 9 128 list split 1;
#X text 95 124 first element = what node-id thinks current tick is
, f 29;
#X text 128 159 next three elements are state checksum, f 23;
#N canvas 484 554 365 300 handle-network-tick 0;
#X obj 13 8 inlet;
#X obj 28 52 r \$0/tick;
#X obj 13 76 >;
#X text 113 33 if a tick from the network is higher than our current
tick then bash our own tick into the new sync., f 32;
#X obj 13 98 sel 1;
#X obj 13 30 t f f;
#X obj 13 120 f;
#X obj 13 142 s \$0/tick-bash;
#X connect 0 0 5 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 2 0;
#X connect 5 1 6 1;
#X connect 6 0 7 0;
#X restore 9 279 pd handle-network-tick;
#N canvas 251 50 450 440 handle-state-checksum 0;
#X obj 12 10 inlet;
#X obj 301 9 r \$0/state-checksum;
#X obj 12 42 unpack f f f;
#X obj 301 31 unpack f f f;
#X obj 167 92 ==;
#X obj 141 92 ==;
#X obj 115 92 ==;
#X obj 141 118 &&;
#X obj 115 142 &&;
#X obj 115 164 sel 0;
#X text 166 157 state checksums don't match broadcast state ids, f
28;
#X obj 115 186 s \$0/broadcast-state-ids;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 2 1 5 0;
#X connect 2 2 4 0;
#X connect 3 0 6 1;
#X connect 3 1 5 1;
#X connect 3 2 4 1;
#X connect 4 0 7 1;
#X connect 5 0 7 0;
#X connect 6 0 8 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X restore 43 244 pd handle-state-checksum;
#N canvas 222 58 450 300 update-last-seen 0;
#X obj 9 8 inlet;
#X obj 43 52 list prepend get;
#X obj 72 198 timer;
#X obj 9 219 list append;
#X obj 9 241 list prepend set;
#X obj 43 142 f;
#X obj 9 30 t f b f f;
#X obj 43 164 s \$0/joined;
#X text 122 151 notify user with "joined" callback if first seen node-id
, f 35;
#X text 144 263 add/update their node-id time in last-seen map;
#X obj 43 98 route bang;
#X obj 43 76 map-api \$0/last-seen;
#X obj 9 263 map-api \$0/last-seen;
#X connect 0 0 6 0;
#X connect 1 0 11 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 4 0 12 0;
#X connect 5 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 2 1;
#X connect 6 2 1 0;
#X connect 6 3 5 1;
#X connect 10 0 5 0;
#X connect 11 0 10 0;
#X restore 142 86 pd update-last-seen;
#X obj 142 66 f;
#X obj 9 33 t b b;
#X text 265 75 check if node joined \, update last-seen map., f 22
;
#X obj 43 166 list split 3;
#X obj 77 200 list append ?;
#X connect 0 0 11 0;
#X connect 1 0 4 0;
#X connect 2 0 10 1;
#X connect 3 0 1 1;
#X connect 4 0 7 0;
#X connect 4 1 13 0;
#X connect 10 0 9 0;
#X connect 11 0 1 0;
#X connect 11 1 10 0;
#X connect 13 0 8 0;
#X connect 13 1 14 0;
#X restore 829 393 pd msg-tick;
#N canvas 41 148 450 300 msg-leave 0;
#X obj 9 10 inlet;
#X obj 54 10 r \$0/syncjams/node-id;
#X obj 9 63 s \$0/forget-node;
#X obj 9 43 f;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 3 0 2 0;
#X restore 843 339 pd msg-leave;
#N canvas 454 79 1030 492 msg-state 0;
#X obj 217 49 re-slash-osc-address;
#X obj 268 273 r \$0/syncjams/node-id;
#X obj 602 65 r \$0/syncjams/data;
#X obj 205 318 list append;
#X text 539 150 message id;
#X obj 354 414 s \$0/state;
#X obj 608 149 list split 1;
#X obj 642 173 list split 1;
#X text 607 177 tick;
#X obj 676 198 list split 1;
#X obj 184 157 list prepend get;
#X obj 184 181 map-api \$0/states;
#X text 83 163 get the state >;
#X obj 217 27 inlet;
#X obj 184 203 route bang;
#X obj 184 388 list prepend set;
#X text 53 187 don't have key yet >;
#X text 619 206 timediff;
#X obj 205 340 list append;
#X obj 581 112 t a a;
#X obj 299 296 list split 3;
#X obj 184 101 symbol;
#X obj 581 89 list;
#X obj 13 33 s \$0/got-state;
#X obj 419 23 r \$0/got-state;
#X obj 419 45 t b b;
#X obj 56 450 s \$0/update-state-checksum;
#X obj 375 345 list prepend;
#X obj 184 123 t a a a;
#X obj 444 315 r \$0/syncjams/node-id;
#X obj 375 367 list append;
#X obj 184 363 list;
#X obj 205 296 list append;
#X obj 354 390 list;
#X obj 184 229 s \$0/update-state;
#X obj 56 294 r \$0/update-state;
#X obj 582 385 s \$0/update-state;
#X obj 13 11 inlet bang-on-state-received;
#X obj 184 412 map-api \$0/states;
#X obj 582 363 sel 1;
#X obj 56 316 t b b b;
#X text 375 164 last state = node_id msg_id tick timediff value, f
16;
#X obj 710 223 t a a;
#X text 751 224 < value;
#X obj 777 291 r \$0/syncjams/node-id;
#X obj 582 315 expr ($f1 < $f2) || (($f1 == $f2) && ($f3 < $f4)) ||
(($f1 == $f2) && ($f3 == $f4) && ($f5 < $f6)), f 33;
#X text 801 311 if this state update's tick is greater than last seen
\, or if it's equal to last seen but time diff is greater \, then we
have a new state \, so output \, update state table \, and update checksums.
(fall back to max nodeid), f 28;
#N canvas 224 68 450 300 extract-vals 0;
#X obj 59 12 inlet;
#X obj 59 34 list split 1;
#X obj 59 78 list;
#X obj 59 56 t b f;
#X obj 86 176 outlet tick;
#X obj 176 176 outlet timediff;
#X obj 286 176 outlet node-id;
#X obj 59 120 unpack f f f f;
#X text 16 140 msg-id ^;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 2 1;
#X connect 2 0 7 0;
#X connect 3 0 2 0;
#X connect 3 1 6 0;
#X connect 7 1 4 0;
#X connect 7 2 5 0;
#X restore 376 225 pd extract-vals;
#X connect 0 0 21 1;
#X connect 1 0 32 1;
#X connect 2 0 22 1;
#X connect 3 0 18 0;
#X connect 6 1 7 0;
#X connect 7 0 45 1;
#X connect 7 1 9 0;
#X connect 9 0 45 3;
#X connect 9 1 42 0;
#X connect 10 0 11 0;
#X connect 11 0 14 0;
#X connect 13 0 0 0;
#X connect 14 0 34 0;
#X connect 14 1 47 0;
#X connect 15 0 38 0;
#X connect 18 0 31 1;
#X connect 19 0 20 0;
#X connect 19 1 6 0;
#X connect 20 0 3 1;
#X connect 21 0 28 0;
#X connect 22 0 19 0;
#X connect 24 0 25 0;
#X connect 25 0 21 0;
#X connect 25 1 22 0;
#X connect 27 0 30 0;
#X connect 28 0 10 0;
#X connect 28 1 32 0;
#X connect 28 2 27 0;
#X connect 29 0 27 1;
#X connect 30 0 33 1;
#X connect 31 0 15 0;
#X connect 32 0 3 0;
#X connect 33 0 5 0;
#X connect 35 0 40 0;
#X connect 37 0 23 0;
#X connect 39 0 36 0;
#X connect 40 0 26 0;
#X connect 40 1 33 0;
#X connect 40 2 31 0;
#X connect 42 0 18 1;
#X connect 42 1 30 1;
#X connect 44 0 45 5;
#X connect 45 0 39 0;
#X connect 47 0 45 0;
#X connect 47 1 45 2;
#X connect 47 2 45 4;
#X restore 871 229 pd msg-state;
#N canvas 350 238 334 185 change-port 0;
#X obj 10 144 outlet;
#X obj 10 7 r \$0/argument/port;
#X msg 10 122 listen \$1;
#X obj 10 29 list prepend set;
#X obj 37 73 list trim;
#X obj 10 51 t b a;
#X msg 10 98 23232;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 5 1 4 0;
#X connect 6 0 2 0;
#X restore 829 38 pd change-port;
#N canvas 448 112 565 574 syncjams-sender 0;
#X obj 11 9 inlet;
#X obj 279 251 spigot 0;
#X obj 190 250 spigot 0;
#X obj 11 58 list prepend send;
#X obj 11 80 list trim;
#X obj 179 510 pipe 1;
#X obj 270 277 netsend -u -b;
#X obj 180 277 netsend -u -b;
#N canvas 666 68 450 300 oscformat 0;
#X obj 10 5 inlet;
#X obj 10 250 outlet;
#X obj 10 29 list split 1;
#X obj 10 104 list;
#X obj 10 51 t b a;
#X obj 170 53 r \$0/argument/namespace;
#X obj 47 77 list prepend syncjams;
#X msg 47 104 set /\$1\$2;
#X obj 10 127 list prepend v1;
#X obj 131 201 list prepend;
#X obj 166 173 list split 1;
#X obj 131 244 spigot 0;
#X obj 176 223 r \$0/debug;
#X obj 131 265 print SEND;
#X obj 10 227 oscformat -f si;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 1;
#X connect 3 0 8 0;
#X connect 4 0 3 0;
#X connect 4 1 6 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 7 0 10 0;
#X connect 7 0 14 0;
#X connect 8 0 9 0;
#X connect 8 0 14 0;
#X connect 9 0 11 0;
#X connect 10 1 9 1;
#X connect 11 0 13 0;
#X connect 12 0 11 1;
#X connect 14 0 1 0;
#X restore 11 35 pd oscformat;
#X msg 270 184 connect 192.168.43.255 23232;
#X msg 180 161 connect 255.255.255.255 23232;
#X obj 180 71 r \$0/arguments-loaded;
#X obj 180 118 23232;
#X obj 207 94 r \$0/argument/port;
#X obj 369 251 spigot 0;
#X obj 360 277 netsend -u -b;
#X obj 180 139 t f f f;
#X msg 360 207 connect 127.0.0.1 23232;
#X obj 11 103 t a a a;
#X obj 360 299 t b f f;
#X obj 270 299 t b f f;
#X obj 179 350 pack 0 0 0;
#X obj 179 299 t f f;
#X obj 198 396 list split 1;
#X obj 280 396 t l;
#X obj 198 418 sel 1;
#X msg 266 440 0;
#X obj 179 488 f;
#X obj 179 372 t b a b;
#X obj 179 531 s \$0/connected;
#X obj 198 440 f;
#X obj 228 440 + 1;
#X obj 198 462 + 1;
#X text 447 184 <- android tether;
#X connect 0 0 8 0;
#X connect 1 0 6 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 18 0;
#X connect 5 0 29 0;
#X connect 6 0 20 0;
#X connect 7 0 22 0;
#X connect 8 0 3 0;
#X connect 9 0 6 0;
#X connect 10 0 7 0;
#X connect 11 0 12 0;
#X connect 12 0 16 0;
#X connect 13 0 12 1;
#X connect 14 0 15 0;
#X connect 15 0 19 0;
#X connect 16 0 10 0;
#X connect 16 1 9 0;
#X connect 16 2 17 0;
#X connect 17 0 15 0;
#X connect 18 0 2 0;
#X connect 18 1 1 0;
#X connect 18 2 14 0;
#X connect 19 0 21 0;
#X connect 19 1 21 2;
#X connect 19 2 14 1;
#X connect 20 0 21 0;
#X connect 20 1 21 1;
#X connect 20 2 1 1;
#X connect 21 0 28 0;
#X connect 22 0 21 0;
#X connect 22 1 2 1;
#X connect 23 0 25 0;
#X connect 23 1 24 0;
#X connect 24 0 23 0;
#X connect 25 0 30 0;
#X connect 26 0 27 1;
#X connect 26 0 30 1;
#X connect 27 0 5 0;
#X connect 28 0 27 0;
#X connect 28 1 23 0;
#X connect 28 2 26 0;
#X connect 30 0 31 0;
#X connect 30 0 32 0;
#X connect 31 0 30 1;
#X connect 32 0 27 1;
#X restore 829 658 pd syncjams-sender;
#X text 826 6 routing of incoming syncjams osc messages from the network
, f 31;
#X obj 829 135 list trim;
#X text 348 133 data stores;
#N canvas 225 73 450 300 node-id 0;
#X obj 14 14 r \$0/arguments-loaded;
#X obj 14 36 uid;
#X obj 14 59 s \$0/node-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 350 327 pd node-id;
#N canvas 852 152 450 478 metronome 0;
#X obj 50 328 + 1;
#X obj 20 328 f;
#X obj 20 445 s \$0/tick;
#X obj 20 9 r \$0/tick-bash;
#X obj 20 31 t b f;
#X obj 95 222 expr 60000 / $f1;
#X msg 285 127 0;
#X obj 285 149 s \$0/tick-bash;
#X obj 68 67 r \$0/state;
#X text 64 31 special bpm change from the network., f 18;
#X obj 294 211 r \$0/argument/bpm;
#X obj 279 257 list prepend /BPM;
#X obj 258 287 list;
#X obj 258 82 r \$0/init-event;
#X text 256 12 once we have an ID and connection \, send our first
state - BPM to the network and kick off timer, f 24;
#X obj 258 104 t b b;
#X obj 122 264 print set bpm;
#X obj 95 199 t f f;
#X obj 68 89 list split 1;
#X obj 68 134 route /BPM;
#X obj 102 112 list trim;
#X obj 68 177 sel 0;
#X text 107 177 <- sanity check;
#X obj 279 187 r \$0/arguments-loaded;
#X obj 279 234 180;
#X obj 20 375 / 12;
#X obj 20 397 int;
#X obj 20 419 change;
#X obj 20 350 t f f;
#X obj 52 375 s \$0/sub-tick;
#X obj 95 284 / 12;
#X obj 20 305 metro 27.7778;
#X obj 122 242 spigot 0;
#X obj 176 199 r \$0/debug;
#X obj 35 278 * 12;
#X obj 68 156 route bang;
#X obj 258 359 s \$0/internal-set-state;
#X obj 258 311 t a b;
#X obj 285 335 s \$0/reset-timediff;
#X connect 0 0 1 1;
#X connect 1 0 0 0;
#X connect 1 0 28 0;
#X connect 3 0 4 0;
#X connect 4 0 31 0;
#X connect 4 1 34 0;
#X connect 5 0 30 0;
#X connect 6 0 7 0;
#X connect 8 0 18 0;
#X connect 10 0 24 1;
#X connect 11 0 12 1;
#X connect 12 0 37 0;
#X connect 13 0 15 0;
#X connect 15 0 12 0;
#X connect 15 1 6 0;
#X connect 17 0 5 0;
#X connect 17 1 32 0;
#X connect 18 1 20 0;
#X connect 19 0 35 0;
#X connect 20 0 19 0;
#X connect 21 1 17 0;
#X connect 23 0 24 0;
#X connect 24 0 11 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 2 0;
#X connect 28 0 25 0;
#X connect 28 1 29 0;
#X connect 30 0 31 1;
#X connect 31 0 1 0;
#X connect 32 0 16 0;
#X connect 33 0 32 1;
#X connect 34 0 1 1;
#X connect 35 1 21 0;
#X connect 37 0 36 0;
#X connect 37 1 38 0;
#X restore 515 328 pd metronome;
#X text 513 309 core timing;
#X obj 15 653 outlet;
#X text 514 359 procedures;
#X obj 946 127 list split 1;
#X obj 980 152 s \$0/syncjams/data;
#X obj 946 178 s \$0/syncjams/node-id;
#X text 12 349 outgoing api;
#X obj 13 193 route get-node-id;
#X obj 13 93 route get-state;
#X obj 13 243 route set-state;
#X obj 13 143 route get-node-list;
#X obj 13 293 route send;
#N canvas 858 363 450 300 get-state 0;
#X obj 13 10 inlet;
#X obj 40 55 list prepend get;
#X obj 40 77 map-api \$0/states;
#X obj 13 32 t a a;
#X obj 82 167 list split 1;
#X obj 116 189 list split 3;
#X obj 13 259 s \$0/state;
#X obj 13 187 list prepend;
#X obj 13 209 list append;
#X obj 40 99 route bang;
#X obj 13 231 spigot 1;
#X obj 40 121 t b b;
#X msg 40 143 0;
#X obj 97 121 t a b;
#X msg 124 142 1;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 7 0;
#X connect 3 1 1 0;
#X connect 4 0 7 1;
#X connect 4 1 5 0;
#X connect 5 1 8 1;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 9 1 13 0;
#X connect 10 0 6 0;
#X connect 11 0 12 0;
#X connect 11 1 6 0;
#X connect 12 0 10 1;
#X connect 13 0 4 0;
#X connect 13 1 14 0;
#X connect 14 0 10 1;
#X restore 13 115 pd get-state;
#N canvas 1001 1270 450 300 set-state 0;
#X obj 9 8 inlet;
#X obj 23 44 r \$0/internal-set-state;
#X text 58 8 /address-key val1 val2 val3 ...;
#X obj 9 75 list trim;
#X obj 9 150 s \$0/state-outgoing;
#X obj 9 127 spigot 0;
#X obj 74 75 r \$0/connected;
#X obj 74 97 > 1;
#X text 65 127 until we are connected drop any state setting messages.
;
#X text 160 141 TODO: queue them instead.;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 3 0 5 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 5 1;
#X restore 13 265 pd set-state;
#N canvas 372 100 450 300 get-node-list 0;
#X obj 10 13 inlet;
#X msg 29 55 each;
#X obj 29 77 map-api \$0/last-seen;
#X obj 29 99 list split 1;
#X obj 109 121 t l;
#X obj 10 143 list;
#X obj 10 165 s \$0/node-list;
#X obj 29 121 list prepend;
#X obj 10 35 t b b b;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 7 1;
#X connect 5 0 6 0;
#X connect 7 0 4 0;
#X connect 7 0 5 1;
#X connect 8 0 5 0;
#X connect 8 1 1 0;
#X connect 8 2 7 1;
#X restore 13 165 pd get-node-list;
#N canvas 226 1128 450 300 get-node-id 0;
#X obj 13 13 inlet;
#X obj 13 35 f;
#X obj 13 57 s \$0/node-id;
#X obj 55 13 r \$0/node-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 1 1;
#X restore 13 215 pd get-node-id;
#N canvas 225 73 450 300 send 0;
#X obj 11 11 inlet;
#X obj 11 35 s \$0/message-outgoing;
#X connect 0 0 1 0;
#X restore 13 315 pd send;
#X text 90 9 incoming api: get-state set-state get-node-list get-node-id
send, f 14;
#X obj 15 370 syncjams-out \$0 tick;
#X obj 25 398 syncjams-out \$0 node-id;
#X obj 35 428 syncjams-out \$0 message;
#X obj 45 458 syncjams-out \$0 state;
#X obj 55 488 syncjams-out \$0 joined;
#X obj 65 518 syncjams-out \$0 left;
#X obj 75 545 syncjams-out \$0 node-list;
#X text 180 398 my-node-id;
#X text 156 371 tick-number;
#X text 202 488 node-id;
#X text 203 518 node-id;
#X text 243 545 node-id-1 node-id-2 node-id-3...;
#X text 186 428 from-node-id /address-key message-values...;
#X text 185 458 from-node-id /address-key state-values...;
#X text 69 316 /address-key message-values...;
#X text 98 266 /address-key state-values...;
#X obj 15 627 list trim;
#N canvas 219 50 710 335 send-tick 0;
#X obj 13 300 outlet;
#X obj 13 13 r \$0/tick;
#X obj 76 202 r \$0/state-checksum;
#X obj 13 158 list prepend;
#X obj 82 136 r \$0/node-id;
#X obj 13 180 list prepend /tick;
#X obj 13 223 list append;
#X connect 1 0 3 0;
#X connect 2 0 6 1;
#X connect 3 0 5 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X restore 845 557 pd send-tick;
#N canvas 777 48 450 473 _send 0;
#X obj 10 399 outlet;
#X obj 10 7 inlet;
#X obj 44 142 list prepend;
#X text 127 142 add new msg_id;
#X obj 44 194 list prepend;
#X obj 113 171 r \$0/node-id;
#X text 127 195 add node_id;
#X obj 113 119 r \$0/msg-id;
#X obj 71 90 s \$0/msg-id-bash;
#X obj 44 69 t a b;
#X obj 10 29 list split 1;
#X obj 10 231 list append;
#X connect 1 0 10 0;
#X connect 2 0 4 0;
#X connect 4 0 11 1;
#X connect 5 0 4 1;
#X connect 7 0 2 1;
#X connect 9 0 2 0;
#X connect 9 1 8 0;
#X connect 10 0 11 0;
#X connect 10 1 9 0;
#X connect 11 0 0 0;
#X restore 829 533 pd _send;
#X obj 840 506 r \$0/message-outgoing;
#X obj 829 437 r \$0/state-outgoing;
#X text 891 532 add node_id \, msg_id & add to sent-queue;
#N canvas 225 73 450 300 msg-id 0;
#X obj 9 14 r \$0/msg-id-bash;
#X obj 39 36 + 1;
#X obj 9 58 s \$0/msg-id;
#X obj 9 36 1;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 3 0 1 0;
#X connect 3 0 2 0;
#X restore 350 353 pd msg-id;
#X text 459 179 node_id -> timestamp;
#X text 443 154 address -> node_id msg_id tick timediff values...;
#N canvas 223 63 503 452 state-checksum 0;
#X obj 16 6 r \$0/update-state-checksum;
#X msg 67 158 each;
#X obj 67 180 map-api \$0/states;
#X obj 101 224 list split 3;
#X obj 101 245 unpack f f f;
#X obj 350 308 checksum_djb3;
#X obj 103 349 pack f f f;
#X obj 103 393 s \$0/state-checksum;
#X obj 350 281 list-collect-and-sort;
#X obj 210 308 checksum_djb3;
#X obj 210 281 list-collect-and-sort;
#X obj 70 308 checksum_djb3;
#X obj 70 281 list-collect-and-sort;
#X obj 16 50 t b b b b;
#X obj 67 202 list split 1;
#X obj 21 28 r \$0/arguments-loaded;
#X obj 103 371 list;
#X msg 67 71 length;
#X obj 67 93 map-api \$0/states;
#X obj 67 115 > 0;
#X obj 67 137 sel 1;
#X obj 344 14 r \$0/state-checksum;
#X obj 344 76 list prepend set;
#X obj 344 98 list trim;
#X obj 344 56 spigot 0;
#X obj 389 35 r \$0/debug;
#X msg 344 120 40609 46500 46511;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 2 0 14 0;
#X connect 3 0 4 0;
#X connect 4 0 12 0;
#X connect 4 1 10 0;
#X connect 4 2 8 0;
#X connect 5 0 6 2;
#X connect 6 0 16 0;
#X connect 8 0 5 0;
#X connect 9 0 6 1;
#X connect 10 0 9 0;
#X connect 11 0 6 0;
#X connect 12 0 11 0;
#X connect 13 0 12 1;
#X connect 13 1 10 1;
#X connect 13 2 8 1;
#X connect 13 3 17 0;
#X connect 14 1 3 0;
#X connect 15 0 13 0;
#X connect 16 0 7 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 1 0;
#X connect 21 0 24 0;
#X connect 22 0 23 0;
#X connect 23 0 26 0;
#X connect 24 0 22 0;
#X connect 25 0 24 1;
#X restore 350 379 pd state-checksum;
#X text 346 308 computed data;
#X text 750 437 outgoing >;
#X obj 829 61 netreceive -u -b 23232;
#X obj 1133 21 tgl 15 0 \$0/debug \$1/debug debug 17 7 0 10 -262144
-1 -1 0 1;
#N canvas 487 268 450 313 init-event 0;
#X text 10 7 wait for all init events: arguments-loaded node-id connected
;
#X obj 11 29 r \$0/arguments-loaded;
#X obj 24 50 r \$0/node-id;
#X obj 20 107 r \$0/connected;
#X obj 11 197 f;
#X obj 41 197 + 1;
#X obj 11 284 s \$0/init-event;
#X msg 11 155 bang;
#X obj 20 129 sel 1;
#X obj 11 219 sel 2;
#X obj 11 175 spigot 1;
#X obj 11 241 t b b;
#X msg 38 262 0;
#X obj 24 72 pipe 1;
#X text 60 129 first connection that works (out of 3 possible);
#X text 70 73 wait a millisecond to ensure this node-id has propagated
;
#X connect 1 0 7 0;
#X connect 2 0 13 0;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 4 0 9 0;
#X connect 5 0 4 1;
#X connect 7 0 10 0;
#X connect 8 0 7 0;
#X connect 9 0 11 0;
#X connect 10 0 4 0;
#X connect 11 0 6 0;
#X connect 11 1 12 0;
#X connect 12 0 10 1;
#X connect 13 0 7 0;
#X restore 492 62 pd init-event;
#X obj 350 155 map \$0/states;
#X obj 350 206 map \$0/throttle-queue;
#X obj 350 180 map \$0/last-seen;
#X obj 94 571 syncjams-out \$0 init-event;
#N canvas 131 50 460 690 msg-state-ids 0;
#X obj 9 10 inlet;
#X obj 317 10 r \$0/syncjams/data;
#X obj 131 10 r \$0/syncjams/node-id;
#X obj 9 145 list;
#X msg 9 255 each;
#X obj 9 277 map-api \$0/states;
#X obj 40 349 list split 1;
#X obj 24 439 list split 2;
#X obj 105 439 t l;
#X obj 9 167 t a a;
#X text 128 278 for each of our own states;
#X obj 9 621 list;
#X obj 9 643 s \$0/re-send-state;
#X text 44 623 if it's not \, re-send the missing state;
#X obj 74 371 list split 1;
#X obj 108 395 list split 1;
#X obj 24 418 list;
#X text 58 417 list of their states to compare;
#X obj 24 461 unpack f f;
#X obj 112 498 ==;
#X obj 139 498 ==;
#X text 157 372 <- node_id;
#X text 192 396 <- msg_id;
#X obj 9 300 t b b a a b;
#X text 137 439 loop through each node_id \, msg_id pair;
#X msg 123 330 1;
#X obj 9 598 spigot 1;
#X text 93 142 loop through our states and compare with the state-ids
list they sent to try and find any that they are missing so we can
re-send them., f 19;
#X text 153 330 re-send state by default;
#X obj 112 520 &&;
#X text 184 521 found a match? block the re-send;
#X obj 112 542 sel 1;
#X msg 112 564 0;
#X obj 9 46 syncjams-debounce 10;
#X text 141 46 ignore rapidfire state-ids;
#X connect 0 0 33 0;
#X connect 1 0 3 1;
#X connect 3 0 9 0;
#X connect 4 0 5 0;
#X connect 5 0 23 0;
#X connect 6 1 14 0;
#X connect 7 0 18 0;
#X connect 7 1 8 0;
#X connect 8 0 7 0;
#X connect 9 0 4 0;
#X connect 9 1 16 1;
#X connect 11 0 12 0;
#X connect 14 0 19 1;
#X connect 14 1 15 0;
#X connect 15 0 20 1;
#X connect 16 0 7 0;
#X connect 18 0 19 0;
#X connect 18 1 20 0;
#X connect 19 0 29 0;
#X connect 20 0 29 1;
#X connect 23 0 26 0;
#X connect 23 1 16 0;
#X connect 23 2 6 0;
#X connect 23 3 11 1;
#X connect 23 4 25 0;
#X connect 25 0 26 1;
#X connect 26 0 11 0;
#X connect 29 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 26 1;
#X connect 33 0 3 0;
#X restore 857 285 pd msg-state-ids;
#X obj 829 157 route tick leave state-ids state, f 10;
#N canvas 97 79 450 449 send-state-ids 0;
#X obj 13 412 outlet;
#X obj 13 10 r \$0/broadcast-state-ids;
#X obj 13 337 list;
#X obj 13 381 list prepend /state-ids;
#X obj 82 338 r \$0/node-id;
#X obj 13 359 list prepend;
#X obj 49 169 r \$0/state-checksum;
#X msg 49 214 each;
#X obj 49 236 map-api \$0/states;
#X obj 49 258 list split 1;
#X obj 83 280 list split 2;
#X obj 83 302 list append;
#X obj 161 302 t l;
#X obj 49 192 t b b;
#X obj 13 72 syncjams-debounce 50;
#X text 143 71 don't send state-ids too often;
#X text 48 145 only update state-id list when checksum changes;
#X connect 1 0 14 0;
#X connect 2 0 5 0;
#X connect 3 0 0 0;
#X connect 4 0 5 1;
#X connect 5 0 3 0;
#X connect 6 0 13 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 1 10 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 11 0 2 1;
#X connect 12 0 11 1;
#X connect 13 0 7 0;
#X connect 13 1 11 1;
#X connect 14 0 2 0;
#X restore 861 582 pd send-state-ids;
#X text 971 610 for re-sending state messages;
#N canvas 916 182 450 300 re-send-state 0;
#X obj 8 9 r \$0/re-send-state;
#X obj 8 31 list split 1;
#X msg 8 97 /state\$1;
#X obj 8 122 list append;
#X obj 8 76 symbol;
#X obj 8 144 outlet;
#N canvas 794 589 450 429 throttle-resend 0;
#X obj 9 8 inlet;
#X obj 9 398 outlet;
#X obj 131 85 timer;
#X obj 28 168 map-api \$0/resend-throttle-queue;
#X obj 9 303 t a a;
#X obj 36 328 list prepend set;
#X obj 36 350 list append;
#X obj 131 107 t f f;
#X obj 36 372 map-api \$0/resend-throttle-queue;
#X obj 9 279 spigot 1;
#X obj 9 30 t a a b;
#X obj 28 145 list prepend get;
#X obj 28 212 <;
#X obj 28 190 + 100;
#X text 74 189 prevent re-send within 100ms of a previous re-send;
#X connect 0 0 10 0;
#X connect 2 0 7 0;
#X connect 3 0 13 0;
#X connect 4 0 1 0;
#X connect 4 1 5 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X connect 7 0 12 1;
#X connect 7 1 6 1;
#X connect 9 0 4 0;
#X connect 10 0 9 0;
#X connect 10 1 11 0;
#X connect 10 2 2 1;
#X connect 11 0 3 0;
#X connect 12 0 9 1;
#X connect 13 0 12 0;
#X restore 118 54 pd throttle-resend;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 1 3 1;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X restore 865 610 pd re-send-state;
#X text 486 206 address -> timestamp state-message...;
#N canvas 223 63 450 300 send-prepend 0;
#X obj 9 75 list split 1;
#X obj 43 148 list prepend;
#X obj 121 119 timer;
#X obj 94 55 r \$0/tick;
#X obj 43 170 list prepend;
#X obj 94 97 t f b;
#X obj 43 97 t a b;
#X text 127 149 time since last tick;
#X text 129 170 last tick;
#X obj 9 225 list append;
#X msg 9 201 list /state\$1;
#X obj 9 11 inlet;
#X obj 9 247 outlet;
#X obj 161 55 loadbang;
#X obj 162 76 r \$0/reset-timediff;
#X connect 0 0 10 0;
#X connect 0 1 6 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 5 0;
#X connect 4 0 9 1;
#X connect 5 0 4 1;
#X connect 5 1 2 0;
#X connect 6 0 1 0;
#X connect 6 1 2 1;
#X connect 9 0 12 0;
#X connect 10 0 9 0;
#X connect 11 0 0 0;
#X connect 13 0 5 0;
#X connect 14 0 2 0;
#X restore 829 481 pd send-prepend;
#X text 750 62 incoming >;
#X text 228 10 optional comma-separated arguments: bpm 180 \; namespace
syncjams \; port 23232, f 36;
#X text 646 23 < distribute arguments passed in by the user., f 25
;
#X obj 53 10 r \$1;
#X obj 61 653 s \$1/r;
#X obj 13 47 list trim;
#N canvas 230 61 450 300 stop-dsp 0;
#X obj 10 8 inlet;
#X obj 10 30 t b a b;
#X obj 29 88 outlet;
#X msg 10 110 \; pd dsp 1;
#X msg 49 51 \; pd dsp 1;
#X text 76 153 we switch off dsp momentarily while we process incoming
network requests so that it is less likely to glitch audio when a lot
of packets come in at once. (no we don't);
#X connect 0 0 1 0;
#X connect 1 1 2 0;
#X restore 829 83 pd stop-dsp;
#N canvas 238 101 450 300 stop-dsp 0;
#X obj 10 8 inlet;
#X obj 10 30 t b a b;
#X obj 29 88 outlet;
#X text 70 8 we switch off dsp momentarily while we process incoming
network requests so that it is less likely to glitch audio when a lot
of packets come in at once.;
#X msg 10 110 \; pd dsp 1;
#X msg 49 51 \; pd dsp 1;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 1 2 0;
#X connect 1 2 5 0;
#X restore 13 69 pd stop-dsp;
#X obj 115 598 syncjams-out \$0 sub-tick;
#N canvas 373 122 450 424 forget-nodes 0;
#X obj 13 298 r \$0/forget-node;
#X obj 13 387 map-api \$0/last-messages;
#X obj 40 365 map-api \$0/last-seen;
#X obj 13 320 list prepend del;
#X obj 13 342 t a a;
#X text 13 276 deleted a single node ID from our lists;
#X obj 11 10 r \$0/tick;
#X text 78 8 check for nodes that have left the network;
#X msg 11 32 each;
#X obj 11 54 map-api \$0/last-seen;
#X obj 11 76 unpack f f;
#X obj 41 123 timer;
#X obj 68 97 t b f;
#X obj 95 122 + 30000;
#X obj 41 150 >;
#X obj 11 226 s \$0/forget-node;
#X text 152 121 haven't seen them for 30 seconds?;
#X obj 11 202 spigot 0;
#X connect 0 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 4 1 2 0;
#X connect 6 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 17 0;
#X connect 10 1 12 0;
#X connect 11 0 14 0;
#X connect 12 0 11 1;
#X connect 12 1 13 0;
#X connect 13 0 14 1;
#X connect 14 0 17 1;
#X connect 17 0 15 0;
#X restore 515 379 pd forget-nodes;
#N canvas 510 50 753 608 throttle-states 0;
#X obj 10 8 inlet;
#X obj 10 580 outlet;
#X text 582 15 retry throttled states;
#X obj 10 159 map-api \$0/throttle-queue;
#X obj 10 95 list split 1;
#X msg 10 137 get \$1;
#X obj 10 181 route bang;
#X msg 527 145 each;
#X obj 527 167 map-api \$0/throttle-queue;
#X obj 10 449 list;
#X obj 67 223 list split 1;
#X obj 101 244 list split 1;
#X obj 101 310 >;
#X obj 10 35 t a a b;
#X obj 194 244 timer;
#X text 236 245 <- now;
#X obj 101 362 sel 0 1;
#N canvas 760 348 450 300 set-throttled-state 0;
#X obj 10 12 inlet;
#X obj 291 12 inlet time;
#X obj 10 34 list split 1;
#X obj 10 56 list append;
#X obj 10 78 list append;
#X obj 10 100 list prepend set;
#X obj 10 122 map-api \$0/throttle-queue;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 2 0 3 0;
#X connect 2 1 4 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X restore 37 525 pd set-throttled-state;
#X obj 527 123 r \$0/retry-throttled-states;
#X obj 527 16 loadbang;
#X obj 264 453 s \$0/retry-throttled-states;
#X obj 527 60 s \$0/retry-throttled-states;
#X obj 10 471 t a a;
#X obj 139 418 f;
#X obj 194 266 t f f;
#X obj 101 266 t f f;
#X obj 206 466 f;
#X obj 37 493 list split 1;
#X obj 64 415 t b b;
#X obj 120 466 list;
#X obj 120 386 t b b b;
#X obj 10 117 t a a;
#X obj 67 202 list prepend;
#X obj 527 189 list split 1;
#X obj 527 238 list append;
#X obj 561 213 list split 1;
#X obj 527 263 t a a;
#X obj 554 286 list length;
#X obj 527 329 spigot;
#X obj 554 308 - 1;
#X obj 527 351 s \$0/throttle-retry;
#X obj 52 8 r \$0/throttle-retry;
#X obj 101 341 && 0;
#X msg 312 297 1;
#X obj 312 275 r \$0/tick;
#X text 310 256 throttle until we've ticked;
#X text 142 291 <- state throttle time 21 milliseconds, f 22;
#X obj 286 62 map-api \$0/throttle-queue;
#X msg 286 39 clear;
#X obj 101 288 + 101;
#X obj 527 38 metro 100;
#X obj 264 431 delay 102;
#X connect 0 0 13 0;
#X connect 3 0 6 0;
#X connect 4 0 31 0;
#X connect 5 0 3 0;
#X connect 6 0 28 0;
#X connect 6 1 32 0;
#X connect 7 0 8 0;
#X connect 8 0 33 0;
#X connect 9 0 22 0;
#X connect 10 1 11 0;
#X connect 11 0 25 0;
#X connect 12 0 42 0;
#X connect 13 0 4 0;
#X connect 13 1 9 1;
#X connect 13 1 29 1;
#X connect 13 2 14 1;
#X connect 14 0 24 0;
#X connect 16 0 28 0;
#X connect 16 1 30 0;
#X connect 18 0 7 0;
#X connect 19 0 50 0;
#X connect 22 0 1 0;
#X connect 22 1 27 0;
#X connect 23 0 17 1;
#X connect 24 0 12 1;
#X connect 24 1 26 1;
#X connect 25 0 49 0;
#X connect 25 1 23 1;
#X connect 26 0 17 1;
#X connect 27 0 17 0;
#X connect 28 0 9 0;
#X connect 28 1 26 0;
#X connect 29 0 17 0;
#X connect 30 0 29 0;
#X connect 30 1 23 0;
#X connect 30 2 51 0;
#X connect 31 0 5 0;
#X connect 31 1 32 1;
#X connect 32 0 10 0;
#X connect 33 0 34 0;
#X connect 33 1 35 0;
#X connect 34 0 36 0;
#X connect 35 1 34 1;
#X connect 36 0 38 0;
#X connect 36 1 37 0;
#X connect 37 0 39 0;
#X connect 38 0 40 0;
#X connect 39 0 38 1;
#X connect 41 0 13 0;
#X connect 42 0 16 0;
#X connect 43 0 42 1;
#X connect 44 0 43 0;
#X connect 48 0 47 0;
#X connect 49 0 12 0;
#X connect 50 0 21 0;
#X connect 51 0 20 0;
#X restore 829 459 pd throttle-states;
#X obj 857 263 ignore-own-messages \$0;
#X obj 843 317 ignore-own-messages \$0;
#X obj 829 371 ignore-own-messages \$0;
#X obj 350 233 map \$0/resend-throttle-queue;
#X text 527 233 address -> timestamp;
#X msg 581 545 /state-ids 1234;
#X connect 0 0 10 0;
#X connect 0 1 6 1;
#X connect 0 2 17 0;
#X connect 1 0 79 0;
#X connect 3 0 2 0;
#X connect 7 0 60 0;
#X connect 10 0 68 0;
#X connect 17 0 19 0;
#X connect 17 1 18 0;
#X connect 21 0 29 0;
#X connect 21 1 23 0;
#X connect 22 0 26 0;
#X connect 22 1 24 0;
#X connect 23 0 27 0;
#X connect 23 1 25 0;
#X connect 24 0 28 0;
#X connect 24 1 21 0;
#X connect 25 0 30 0;
#X connect 32 0 48 0;
#X connect 33 0 48 0;
#X connect 34 0 48 0;
#X connect 35 0 48 0;
#X connect 36 0 48 0;
#X connect 37 0 48 0;
#X connect 38 0 48 0;
#X connect 48 0 15 0;
#X connect 48 0 78 0;
#X connect 49 0 8 0;
#X connect 50 0 8 0;
#X connect 51 0 50 0;
#X connect 52 0 84 0;
#X connect 60 0 80 0;
#X connect 66 0 48 0;
#X connect 68 0 87 0;
#X connect 68 1 86 0;
#X connect 68 2 85 0;
#X connect 68 3 6 0;
#X connect 69 0 8 0;
#X connect 71 0 8 0;
#X connect 73 0 50 0;
#X connect 77 0 79 0;
#X connect 79 0 81 0;
#X connect 80 0 0 0;
#X connect 81 0 22 0;
#X connect 82 0 48 0;
#X connect 84 0 73 0;
#X connect 85 0 67 0;
#X connect 86 0 5 0;
#X connect 87 0 4 0;
#X connect 90 0 8 0;
