#N canvas 154 57 1209 680 10;
#N canvas 261 187 450 360 parse-osc-message 0;
#X obj 10 13 inlet;
#N canvas 400 118 450 300 count-address-components 0;
#X obj 15 8 inlet;
#X obj 15 270 outlet;
#X obj 80 270 outlet;
#X obj 126 122 t l;
#X obj 46 188 sel 47;
#X obj 46 210 f;
#X obj 76 210 + 1;
#X msg 62 101 0;
#X obj 46 122 list split 1;
#X obj 30 232 f;
#X obj 93 188 sel 0;
#X obj 15 30 t a b a b b;
#X msg 78 78 1;
#X obj 46 144 spigot 1;
#X msg 103 210 0;
#X text 174 124 count the number of / characters (47) before the first
null character (0)., f 22;
#X obj 46 166 t a a;
#N canvas 1004 276 450 300 list-reverse 0;
#X obj 11 8 inlet;
#X obj 30 90 list split 1;
#X obj 113 90 t l;
#X obj 114 112 t l;
#X obj 11 148 list;
#X obj 11 30 t b a b;
#X obj 30 112 list prepend;
#X obj 11 170 outlet;
#X connect 0 0 5 0;
#X connect 1 0 6 0;
#X connect 1 1 2 0;
#X connect 2 0 1 0;
#X connect 3 0 6 1;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 5 1 1 0;
#X connect 5 2 6 1;
#X connect 6 0 3 0;
#X connect 6 0 4 1;
#X restore 46 52 pd list-reverse;
#X connect 0 0 11 0;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 0 9 1;
#X connect 6 0 5 1;
#X connect 7 0 5 1;
#X connect 8 0 13 0;
#X connect 8 1 3 0;
#X connect 9 0 2 0;
#X connect 10 0 14 0;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 17 0;
#X connect 11 3 7 0;
#X connect 11 4 12 0;
#X connect 12 0 13 1;
#X connect 13 0 16 0;
#X connect 14 0 13 1;
#X connect 16 0 4 0;
#X connect 16 1 10 0;
#X connect 17 0 8 0;
#X restore 10 35 pd count-address-components;
#X obj 10 154 list split;
#X obj 10 133 route syncjams;
#X obj 10 109 list trim;
#X obj 10 57 oscparse;
#X obj 10 267 list split 1;
#X obj 10 303 outlet action;
#X obj 101 303 outlet address;
#X obj 198 303 outlet data;
#X obj 91 59 r \$0/argument/namespace;
#X obj 38 198 route v1;
#X obj 10 243 list;
#X obj 38 220 t b a;
#X obj 38 176 list trim;
#X obj 91 81 symbol;
#X obj 10 79 t a a;
#X obj 214 161 spigot 0;
#X obj 259 140 r \$0/debug;
#X obj 214 184 list split;
#X obj 214 206 re-slash-osc-address;
#X obj 214 228 list append;
#X obj 214 250 print RAW;
#X obj 271 161 + 1;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 1 1 2 1;
#X connect 1 1 23 0;
#X connect 2 0 12 0;
#X connect 2 1 14 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 16 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 10 0 15 0;
#X connect 11 0 13 0;
#X connect 12 0 6 0;
#X connect 13 0 12 1;
#X connect 13 1 9 0;
#X connect 14 0 11 0;
#X connect 15 0 3 1;
#X connect 16 0 4 0;
#X connect 16 1 17 0;
#X connect 17 0 19 0;
#X connect 18 0 17 1;
#X connect 19 0 20 0;
#X connect 19 1 21 1;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 23 0 19 1;
#X restore 829 93 pd parse-osc-message;
#X obj 13 10 inlet;
#N canvas 696 85 342 652 parse-named-arguments 0;
#X obj 11 11 loadbang;
#X obj 38 85 list split 1;
#X obj 121 85 t l;
#X text 153 84 <- serialize;
#X obj 57 165 list fromsymbol;
#X obj 78 211 list split 1;
#X obj 159 211 t l;
#X obj 78 278 list append;
#X obj 153 278 t l;
#X obj 57 304 list;
#X obj 57 187 t b a b;
#X obj 57 331 list tosymbol;
#X obj 38 408 list;
#X obj 140 374 t l;
#X obj 57 353 list;
#X obj 38 111 t b a b;
#X obj 57 140 symbol;
#X obj 57 374 list append;
#X obj 38 429 list trim;
#X obj 78 255 t b b b;
#X obj 78 233 sel 61;
#X obj 38 63 list append \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8;
#X obj 38 451 route bang;
#X obj 71 11 inlet;
#X obj 95 475 list split 1;
#X obj 95 503 list prepend;
#X obj 95 525 list prepend \$0;
#X obj 11 33 t b b;
#X obj 11 575 \$0;
#X msg 11 597 \; \$1/arguments-loaded bang;
#X msg 95 547 \; \$1/argument/\$3 \$2;
#X connect 0 0 27 0;
#X connect 1 0 15 0;
#X connect 1 1 2 0;
#X connect 2 0 1 0;
#X connect 4 0 10 0;
#X connect 5 0 20 0;
#X connect 5 1 6 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 7 0 9 1;
#X connect 8 0 7 1;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 10 1 5 0;
#X connect 10 2 7 1;
#X connect 11 0 14 0;
#X connect 12 0 18 0;
#X connect 13 0 17 1;
#X connect 14 0 17 0;
#X connect 15 0 12 0;
#X connect 15 1 16 0;
#X connect 15 2 17 1;
#X connect 16 0 4 0;
#X connect 17 0 13 0;
#X connect 17 0 12 1;
#X connect 18 0 22 0;
#X connect 19 0 9 1;
#X connect 19 1 9 0;
#X connect 19 2 7 1;
#X connect 20 0 19 0;
#X connect 20 1 7 0;
#X connect 21 0 1 0;
#X connect 22 1 24 0;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 25 1;
#X connect 25 0 26 0;
#X connect 26 0 30 0;
#X connect 27 0 28 0;
#X connect 27 1 21 0;
#X connect 28 0 29 0;
#X restore 508 64 pd parse-named-arguments;
#X msg 508 43 bang;
#N canvas 448 354 450 318 msg-tick 0;
#X obj 9 11 inlet;
#X obj 9 56 list;
#X obj 207 17 r \$0/syncjams/node-id;
#X obj 71 17 r \$0/syncjams/data;
#X obj 9 128 list split 1;
#X text 95 124 first element = what node-id thinks current tick is
, f 29;
#X text 128 159 next three elements are state checksum, f 23;
#X text 216 200 remaining elements are last message ids for each node
, f 28;
#N canvas 489 579 365 300 handle-network-tick 0;
#X obj 13 8 inlet;
#X obj 28 52 r \$0/tick;
#X obj 13 76 >;
#X text 113 33 if a tick from the network is higher than our current
tick then bash our own tick into the new sync., f 32;
#X obj 13 98 sel 1;
#X obj 13 30 t f f;
#X obj 13 120 f;
#X obj 13 142 s \$0/tick-bash;
#X connect 0 0 5 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 2 0;
#X connect 5 1 6 1;
#X connect 6 0 7 0;
#X restore 9 279 pd handle-network-tick;
#N canvas 261 218 450 440 handle-state-checksum 0;
#X obj 12 10 inlet;
#X obj 301 9 r \$0/state-checksum;
#X obj 12 32 unpack f f f;
#X obj 301 31 unpack f f f;
#X obj 167 92 ==;
#X obj 141 92 ==;
#X obj 115 92 ==;
#X obj 141 118 &&;
#X obj 115 142 &&;
#X obj 115 164 sel 0;
#X text 166 157 state checksums don't match broadcast state ids, f
28;
#X obj 115 186 s \$0/broadcast-state-ids;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 2 1 5 0;
#X connect 2 2 4 0;
#X connect 3 0 6 1;
#X connect 3 1 5 1;
#X connect 3 2 4 1;
#X connect 4 0 7 1;
#X connect 5 0 7 0;
#X connect 6 0 8 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X restore 43 244 pd handle-state-checksum;
#N canvas 862 85 773 602 handle-message-ids 0;
#X obj 6 9 inlet;
#X obj 69 126 r \$0/node-id;
#X obj 36 83 list split 2;
#X obj 116 83 t l;
#X obj 36 105 unpack f f;
#X obj 36 147 sel -1;
#X obj 36 193 f;
#X text 159 125 find our node-id in the list they sent;
#X text 81 16 set initial state to not-found;
#X obj 6 31 t b a b;
#X obj 371 250 r \$0/msg-id;
#X obj 6 255 spigot 0;
#X msg 45 52 1;
#X obj 36 169 t b b;
#X msg 63 193 0;
#X obj 356 275 <;
#X obj 356 297 sel 0;
#X msg 356 373 each;
#X obj 36 215 t f f;
#X obj 356 329 f;
#X obj 356 351 t b f;
#X obj 356 395 map-api \$0/sent-queue;
#X obj 356 438 list split 1;
#X obj 356 417 t a a;
#X obj 356 460 >;
#X obj 356 482 sel 1;
#X obj 356 504 list;
#X text 512 398 send all newer messages than what they have, f 24
;
#X obj 356 526 s \$0/re-send-message;
#X text 455 246 if the message they have is too old \, re-send., f
26;
#X text 70 240 first time we have seen that node so just send them
our ver latest message so they can get the message id., f 39;
#X msg 33 340 each;
#X obj 33 362 map-api \$0/sent-queue;
#X obj 33 406 list split 1;
#X obj 33 448 > 0;
#X msg 60 318 0;
#X obj 33 384 t a a;
#X obj 33 495 list;
#X obj 6 537 route bang;
#X obj 63 559 s \$0/re-send-message;
#X obj 33 470 sel 1;
#X obj 6 277 t b a;
#X obj 6 516 list;
#X obj 33 297 t a b b;
#X obj 65 448 f;
#X obj 33 428 t f f;
#X connect 0 0 9 0;
#X connect 1 0 5 1;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 4 1 6 1;
#X connect 5 0 13 0;
#X connect 6 0 18 0;
#X connect 9 0 11 0;
#X connect 9 1 2 0;
#X connect 9 2 12 0;
#X connect 10 0 15 1;
#X connect 11 0 41 0;
#X connect 12 0 11 1;
#X connect 13 0 6 0;
#X connect 13 1 14 0;
#X connect 14 0 11 1;
#X connect 15 0 16 0;
#X connect 16 0 19 0;
#X connect 17 0 21 0;
#X connect 18 0 15 0;
#X connect 18 1 19 1;
#X connect 19 0 20 0;
#X connect 20 0 17 0;
#X connect 20 1 24 1;
#X connect 21 0 23 0;
#X connect 22 0 24 0;
#X connect 23 0 22 0;
#X connect 23 1 26 1;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 28 0;
#X connect 31 0 32 0;
#X connect 32 0 36 0;
#X connect 33 0 45 0;
#X connect 34 0 40 0;
#X connect 35 0 34 1;
#X connect 36 0 33 0;
#X connect 36 1 37 1;
#X connect 37 0 42 1;
#X connect 38 1 39 0;
#X connect 40 0 37 0;
#X connect 40 0 44 0;
#X connect 41 0 42 0;
#X connect 41 1 43 0;
#X connect 42 0 38 0;
#X connect 43 0 31 0;
#X connect 43 1 35 0;
#X connect 43 2 42 1;
#X connect 44 0 34 1;
#X connect 45 0 34 0;
#X connect 45 1 44 1;
#X restore 77 205 pd handle-message-ids;
#N canvas 2 50 450 300 update-last-seen 0;
#X obj 9 8 inlet;
#X obj 43 52 list prepend get;
#X obj 72 198 timer;
#X obj 9 219 list append;
#X obj 9 241 list prepend set;
#X obj 43 142 f;
#X obj 9 30 t f b f f;
#X obj 43 164 s \$0/joined;
#X text 122 151 notify user with "joined" callback if first seen node-id
, f 35;
#X text 144 263 add/update their node-id time in last-seen map;
#X obj 43 98 route bang;
#X obj 43 76 map-api \$0/last-seen;
#X obj 9 263 map-api \$0/last-seen;
#X connect 0 0 6 0;
#X connect 1 0 11 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 4 0 12 0;
#X connect 5 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 2 1;
#X connect 6 2 1 0;
#X connect 6 3 5 1;
#X connect 10 0 5 0;
#X connect 11 0 10 0;
#X restore 142 86 pd update-last-seen;
#X obj 142 66 f;
#X obj 9 33 t b b;
#X text 265 75 check if node joined \, update last-seen map., f 22
;
#X obj 43 166 list split 3;
#X connect 0 0 13 0;
#X connect 1 0 4 0;
#X connect 2 0 12 1;
#X connect 3 0 1 1;
#X connect 4 0 8 0;
#X connect 4 1 15 0;
#X connect 12 0 11 0;
#X connect 13 0 1 0;
#X connect 13 1 12 0;
#X connect 15 0 9 0;
#X connect 15 1 10 0;
#X restore 829 411 pd msg-tick;
#X obj 886 278 list append;
#N canvas 45 168 450 300 msg-leave 0;
#X obj 9 10 inlet;
#X obj 54 10 r \$0/syncjams/node-id;
#X obj 9 63 s \$0/forget-node;
#X obj 9 43 f;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 3 0 2 0;
#X restore 843 384 pd msg-leave;
#N canvas 513 353 450 300 msg-message 0;
#X obj 6 6 inlet address;
#X obj 6 30 re-slash-osc-address;
#X obj 154 6 r \$0/syncjams/node-id;
#X obj 297 7 r \$0/syncjams/data;
#X obj 85 194 list append;
#X obj 297 29 list split 1;
#X text 227 43 message id;
#X obj 85 249 s \$0/message;
#X obj 85 172 list prepend;
#X obj 85 226 spigot 0;
#X obj 206 187 r \$0/msg-id-increment;
#X text 206 153 if the message id was an increment then let it through.
, f 34;
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 2 0 8 1;
#X connect 3 0 5 0;
#X connect 4 0 9 0;
#X connect 5 1 4 1;
#X connect 8 0 4 0;
#X connect 9 0 7 0;
#X connect 10 0 9 1;
#X restore 886 303 pd msg-message;
#N canvas 445 343 1030 423 msg-state 0;
#X obj 217 49 re-slash-osc-address;
#X obj 268 253 r \$0/syncjams/node-id;
#X obj 602 65 r \$0/syncjams/data;
#X obj 205 298 list append;
#X text 541 152 message id;
#X obj 407 384 s \$0/state;
#X obj 608 149 list split 1;
#X obj 642 173 list split 1;
#X text 607 177 tick;
#X obj 676 198 list split 1;
#X obj 184 157 list prepend get;
#X obj 184 181 map-api \$0/states;
#X text 83 163 get the state >;
#X obj 217 27 inlet;
#X obj 184 203 route bang;
#X obj 184 368 list prepend set;
#X text 53 187 don't have key yet >;
#X text 619 206 timediff;
#X obj 205 320 list append;
#X obj 581 112 t a a;
#X obj 299 276 list split 3;
#X obj 378 230 unpack f f f f;
#X obj 184 101 symbol;
#X obj 581 89 list;
#X obj 13 33 s \$0/got-state;
#X obj 419 23 r \$0/got-state;
#X obj 419 45 t b b;
#X obj 14 380 s \$0/update-state-checksum;
#X obj 428 315 list prepend;
#X obj 184 123 t a a a;
#X obj 413 284 r \$0/syncjams/node-id;
#X obj 428 337 list append;
#X obj 184 343 list;
#X obj 205 276 list append;
#X obj 407 360 list;
#X obj 184 229 s \$0/update-state;
#X obj 630 331 ||;
#X obj 645 286 ==;
#X obj 621 236 t f f;
#X obj 645 309 &&;
#X obj 56 274 r \$0/update-state;
#X obj 606 286 <;
#X obj 675 286 <;
#X obj 630 375 s \$0/update-state;
#X text 720 280 if this state update's tick is greater than last seen
\, or if it's equal to last seen but time diff is greater \, then we
have a new state \, so output \, update state table \, and update checksums.
, f 44;
#X text 375 180 last state = node_id msg_id tick timediff, f 16;
#X obj 13 11 inlet bang-on-state-received;
#X obj 184 392 map-api \$0/states;
#X obj 630 353 sel 1;
#X obj 56 296 t b b b;
#X connect 0 0 22 1;
#X connect 1 0 33 1;
#X connect 2 0 23 1;
#X connect 3 0 18 0;
#X connect 6 1 7 0;
#X connect 7 0 38 0;
#X connect 7 1 9 0;
#X connect 9 0 42 1;
#X connect 9 1 18 1;
#X connect 9 1 31 1;
#X connect 10 0 11 0;
#X connect 11 0 14 0;
#X connect 13 0 0 0;
#X connect 14 0 35 0;
#X connect 14 1 21 0;
#X connect 15 0 47 0;
#X connect 18 0 32 1;
#X connect 19 0 20 0;
#X connect 19 1 6 0;
#X connect 20 0 3 1;
#X connect 21 2 41 0;
#X connect 21 2 37 0;
#X connect 21 3 42 0;
#X connect 22 0 29 0;
#X connect 23 0 19 0;
#X connect 25 0 26 0;
#X connect 26 0 22 0;
#X connect 26 1 23 0;
#X connect 28 0 31 0;
#X connect 29 0 10 0;
#X connect 29 1 33 0;
#X connect 29 2 28 0;
#X connect 30 0 28 1;
#X connect 31 0 34 1;
#X connect 32 0 15 0;
#X connect 33 0 3 0;
#X connect 34 0 5 0;
#X connect 36 0 48 0;
#X connect 37 0 39 0;
#X connect 38 0 41 1;
#X connect 38 1 37 1;
#X connect 39 0 36 1;
#X connect 40 0 49 0;
#X connect 41 0 36 0;
#X connect 42 0 39 1;
#X connect 46 0 24 0;
#X connect 48 0 43 0;
#X connect 49 0 27 0;
#X connect 49 1 34 0;
#X connect 49 2 32 0;
#X restore 871 329 pd msg-state;
#N canvas 355 263 334 185 change-port 0;
#X obj 10 144 outlet;
#X obj 10 7 r \$0/argument/port;
#X msg 10 122 listen \$1;
#X obj 10 29 list prepend set;
#X obj 37 73 list trim;
#X obj 10 51 t b a;
#X msg 10 98 23232;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 5 1 4 0;
#X connect 6 0 2 0;
#X restore 829 47 pd change-port;
#N canvas 548 82 565 574 syncjams-sender 0;
#X obj 11 9 inlet;
#X obj 279 251 spigot 0;
#X obj 190 250 spigot 0;
#X obj 11 58 list prepend send;
#X obj 11 80 list trim;
#X obj 179 510 pipe 1;
#X obj 270 277 netsend -u -b;
#X obj 180 277 netsend -u -b;
#N canvas 675 170 450 300 oscformat 0;
#X obj 10 5 inlet;
#X obj 10 250 outlet;
#X obj 10 29 list split 1;
#X obj 10 104 list;
#X obj 10 51 t b a;
#X obj 170 53 r \$0/argument/namespace;
#X obj 47 77 list prepend syncjams;
#X msg 47 104 set /\$1\$2;
#X obj 10 127 list prepend v1;
#X obj 10 227 oscformat -b si;
#X obj 131 201 list prepend;
#X obj 166 173 list split 1;
#X obj 131 244 spigot 0;
#X obj 176 223 r \$0/debug;
#X obj 131 265 print SEND;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 1;
#X connect 3 0 8 0;
#X connect 4 0 3 0;
#X connect 4 1 6 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 7 0 11 0;
#X connect 8 0 9 0;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 12 0;
#X connect 11 1 10 1;
#X connect 12 0 14 0;
#X connect 13 0 12 1;
#X restore 11 35 pd oscformat;
#X msg 270 184 connect 192.168.43.255 23232;
#X msg 180 161 connect 255.255.255.255 23232;
#X obj 180 31 r \$0/arguments-loaded;
#X obj 180 118 23232;
#X obj 207 53 r \$0/argument/port;
#X obj 207 75 list;
#X obj 207 97 f;
#X obj 369 251 spigot 0;
#X obj 360 277 netsend -u -b;
#X obj 180 139 t f f f;
#X msg 360 214 connect 127.0.0.1 23232;
#X obj 11 103 t a a a;
#X obj 360 299 t b f f;
#X obj 270 299 t b f f;
#X obj 179 350 pack 0 0 0;
#X obj 179 299 t f f;
#X obj 198 396 list split 1;
#X obj 280 396 t l;
#X obj 198 418 sel 1;
#X msg 266 440 0;
#X obj 179 488 f;
#X obj 179 372 t b a b;
#X obj 179 531 s \$0/connected;
#X obj 198 440 f;
#X obj 228 440 + 1;
#X obj 198 462 + 1;
#X connect 0 0 8 0;
#X connect 1 0 6 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 20 0;
#X connect 5 0 31 0;
#X connect 6 0 22 0;
#X connect 7 0 24 0;
#X connect 8 0 3 0;
#X connect 9 0 6 0;
#X connect 10 0 7 0;
#X connect 11 0 12 0;
#X connect 12 0 18 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 12 1;
#X connect 16 0 17 0;
#X connect 17 0 21 0;
#X connect 18 0 10 0;
#X connect 18 1 9 0;
#X connect 18 2 19 0;
#X connect 19 0 17 0;
#X connect 20 0 2 0;
#X connect 20 1 1 0;
#X connect 20 2 16 0;
#X connect 21 0 23 0;
#X connect 21 1 23 2;
#X connect 21 2 16 1;
#X connect 22 0 23 0;
#X connect 22 1 23 1;
#X connect 22 2 1 1;
#X connect 23 0 30 0;
#X connect 24 0 23 0;
#X connect 24 1 2 1;
#X connect 25 0 27 0;
#X connect 25 1 26 0;
#X connect 26 0 25 0;
#X connect 27 0 32 0;
#X connect 28 0 29 1;
#X connect 28 0 32 1;
#X connect 29 0 5 0;
#X connect 30 0 29 0;
#X connect 30 1 25 0;
#X connect 30 2 28 0;
#X connect 32 0 33 0;
#X connect 32 0 34 0;
#X connect 33 0 32 1;
#X connect 34 0 29 1;
#X restore 829 658 pd syncjams-sender;
#X text 506 11 distribute arguments passed in by the user., f 25;
#X text 826 11 routing of incoming syncjams osc messages from the network
, f 31;
#X obj 829 115 list trim;
#X text 378 133 data stores;
#N canvas 179 162 450 300 node-id 0;
#X obj 14 14 r \$0/arguments-loaded;
#X obj 14 36 uid;
#X obj 14 59 s \$0/node-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 380 347 pd node-id;
#N canvas 425 67 450 360 metronome 0;
#X obj 50 277 + 1;
#X obj 20 277 f;
#X obj 20 299 s \$0/tick;
#X obj 20 29 r \$0/tick-bash;
#X obj 20 51 t b f;
#X obj 95 222 expr 60000 / $f1;
#X obj 20 255 metro 333.333;
#X msg 285 127 0;
#X obj 285 149 s \$0/tick-bash;
#X obj 95 108 r \$0/state;
#X text 91 72 special bpm change from the network., f 18;
#X obj 258 309 s \$0/internal-state;
#X obj 279 194 r \$0/argument/bpm;
#X obj 279 259 list prepend /BPM;
#X obj 258 287 list;
#X obj 258 82 r \$0/init-event;
#X text 256 12 once we have an ID and connection \, send our first
state - BPM to the network and kick off timer, f 24;
#X obj 258 104 t b b;
#X obj 122 255 print set bpm;
#X obj 95 199 t f f;
#X obj 95 130 list split 1;
#X obj 95 175 route /BPM;
#X obj 129 153 list trim;
#X obj 279 238 f;
#X obj 279 216 symbol;
#X connect 0 0 1 1;
#X connect 1 0 0 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 1 1;
#X connect 5 0 6 1;
#X connect 6 0 1 0;
#X connect 7 0 8 0;
#X connect 9 0 20 0;
#X connect 12 0 24 0;
#X connect 13 0 14 1;
#X connect 14 0 11 0;
#X connect 15 0 17 0;
#X connect 17 0 14 0;
#X connect 17 1 7 0;
#X connect 19 0 5 0;
#X connect 19 1 18 0;
#X connect 20 1 22 0;
#X connect 21 0 19 0;
#X connect 22 0 21 0;
#X connect 23 0 13 0;
#X connect 24 0 23 0;
#X restore 545 348 pd metronome;
#X text 543 329 core timing;
#X obj 15 653 outlet;
#X text 544 379 procedures;
#N canvas 377 142 450 424 forget-nodes 0;
#X obj 13 298 r \$0/forget-node;
#X obj 13 387 map-api \$0/last-messages;
#X obj 40 365 map-api \$0/last-seen;
#X obj 13 320 list prepend del;
#X obj 13 342 t a a;
#X text 13 276 deleted a single node ID from our lists;
#X obj 11 10 r \$0/tick;
#X text 78 8 check for nodes that have left the network;
#X msg 11 32 each;
#X obj 11 54 map-api \$0/last-seen;
#X obj 11 76 unpack f f;
#X obj 41 123 timer;
#X obj 68 97 t b f;
#X obj 95 122 + 30000;
#X obj 41 150 >;
#X obj 11 226 s \$0/forget-node;
#X text 152 121 haven't seen them for 30 seconds?;
#X obj 11 202 spigot 0;
#X connect 0 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 4 1 2 0;
#X connect 6 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 17 0;
#X connect 10 1 12 0;
#X connect 11 0 14 0;
#X connect 12 0 11 1;
#X connect 12 1 13 0;
#X connect 13 0 14 1;
#X connect 14 0 17 1;
#X connect 17 0 15 0;
#X restore 546 397 pd forget-nodes;
#X obj 946 115 list split 1;
#X obj 980 140 s \$0/syncjams/data;
#X obj 946 167 s \$0/syncjams/node-id;
#X text 12 377 outgoing api;
#X obj 13 229 route get-node-id;
#X obj 13 129 route get-state;
#X obj 13 279 route set-state;
#X obj 13 179 route get-node-list;
#X obj 13 329 route send;
#N canvas 859 368 450 300 get-state 0;
#X obj 13 10 inlet;
#X obj 40 55 list prepend get;
#X obj 40 77 map-api \$0/states;
#X obj 13 32 t a a;
#X obj 82 167 list split 1;
#X obj 116 189 list split 3;
#X obj 13 259 s \$0/state;
#X obj 13 187 list prepend;
#X obj 13 209 list append;
#X obj 40 99 route bang;
#X obj 13 231 spigot 1;
#X obj 40 121 t b b;
#X msg 40 143 0;
#X obj 97 121 t a b;
#X msg 124 142 1;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 7 0;
#X connect 3 1 1 0;
#X connect 4 0 7 1;
#X connect 4 1 5 0;
#X connect 5 1 8 1;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 9 1 13 0;
#X connect 10 0 6 0;
#X connect 11 0 12 0;
#X connect 11 1 6 0;
#X connect 12 0 10 1;
#X connect 13 0 4 0;
#X connect 13 1 14 0;
#X connect 14 0 10 1;
#X restore 13 151 pd get-state;
#N canvas 2 50 450 300 set-state 0;
#X obj 9 8 inlet;
#X obj 9 75 list split 1;
#X obj 43 148 list prepend;
#X obj 121 119 timer;
#X obj 94 75 r \$0/tick;
#X obj 43 170 list prepend;
#X obj 94 97 t f b;
#X obj 43 97 t a b;
#X text 58 8 /address last_tick time_since_last_tick val1 val2 val3
...;
#X text 127 149 time since last tick;
#X text 129 170 last tick;
#X obj 9 225 list append;
#X obj 9 247 s \$0/state-outgoing;
#X msg 9 201 list /state\$1;
#X obj 23 44 r \$0/internal-state;
#X connect 0 0 1 0;
#X connect 1 0 13 0;
#X connect 1 1 7 0;
#X connect 2 0 5 0;
#X connect 3 0 2 1;
#X connect 4 0 6 0;
#X connect 5 0 11 1;
#X connect 6 0 5 1;
#X connect 6 1 3 0;
#X connect 7 0 2 0;
#X connect 7 1 3 1;
#X connect 11 0 12 0;
#X connect 13 0 11 0;
#X connect 14 0 1 0;
#X restore 13 301 pd set-state;
#N canvas 373 105 450 300 get-node-list 0;
#X obj 10 13 inlet;
#X msg 29 55 each;
#X obj 29 77 map-api \$0/last-seen;
#X obj 29 99 list split 1;
#X obj 109 121 t l;
#X obj 10 143 list;
#X obj 10 165 s \$0/node-list;
#X obj 29 121 list prepend;
#X obj 10 35 t b b b;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 7 1;
#X connect 5 0 6 0;
#X connect 7 0 4 0;
#X connect 7 0 5 1;
#X connect 8 0 5 0;
#X connect 8 1 1 0;
#X connect 8 2 7 1;
#X restore 13 201 pd get-node-list;
#N canvas 226 1128 450 300 get-node-id 0;
#X obj 13 13 inlet;
#X obj 13 35 f;
#X obj 13 57 s \$0/node-id;
#X obj 55 13 r \$0/node-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 1 1;
#X restore 13 251 pd get-node-id;
#N canvas 2 50 450 300 send 0;
#X obj 11 11 inlet;
#X obj 11 35 s \$0/message-outgoing;
#X connect 0 0 1 0;
#X restore 13 351 pd send;
#X text 31 35 incoming api: get-state set-state get-node-list get-node-id
send, f 14;
#X obj 15 398 syncjams-out \$0 tick;
#X obj 25 426 syncjams-out \$0 node-id;
#X obj 35 456 syncjams-out \$0 message;
#X obj 45 486 syncjams-out \$0 state;
#X obj 55 516 syncjams-out \$0 joined;
#X obj 65 546 syncjams-out \$0 left;
#X obj 75 576 syncjams-out \$0 node-list;
#X text 180 426 my-node-id;
#X text 156 399 tick-number;
#X text 202 516 node-id;
#X text 203 546 node-id;
#X text 243 576 node-id-1 node-id-2 node-id-3...;
#X text 186 456 from-node-id /address-key message-values...;
#X text 185 486 from-node-id /address-key state-values...;
#X text 69 352 /address-key message-values...;
#X text 98 302 /address-key state-values...;
#X obj 15 632 list trim;
#N canvas 201 195 710 335 send-tick 0;
#X obj 13 300 outlet;
#X obj 13 13 r \$0/tick;
#X obj 76 202 r \$0/state-checksum;
#X obj 13 158 list prepend;
#X obj 82 136 r \$0/node-id;
#X obj 13 180 list prepend /tick;
#X obj 13 223 list append;
#X obj 13 274 list append;
#X msg 285 186 each;
#X obj 285 208 map-api \$0/last-messages;
#X obj 285 230 list append;
#X obj 366 230 t l;
#X obj 76 252 list;
#X obj 285 120 map-api \$0/last-messages;
#X msg 285 98 length;
#X obj 285 142 > 0;
#X obj 285 164 sel 1;
#X obj 13 58 t a b b b;
#X connect 1 0 17 0;
#X connect 2 0 6 1;
#X connect 3 0 5 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 10 0 12 1;
#X connect 11 0 10 1;
#X connect 12 0 7 1;
#X connect 13 0 15 0;
#X connect 14 0 13 0;
#X connect 15 0 16 0;
#X connect 16 0 8 0;
#X connect 17 0 3 0;
#X connect 17 1 12 0;
#X connect 17 2 14 0;
#X connect 17 3 10 1;
#X restore 845 553 pd send-tick;
#N canvas 182 188 450 473 _send 0;
#X obj 10 399 outlet;
#X obj 10 7 inlet;
#X obj 44 142 list prepend;
#X text 127 142 add new msg_id;
#X obj 44 194 list prepend;
#X obj 113 171 r \$0/node-id;
#X text 127 195 add node_id;
#X obj 49 294 list prepend;
#X obj 113 119 r \$0/msg-id;
#X obj 71 90 s \$0/msg-id-bash;
#X obj 44 69 t a b;
#X obj 49 316 list prepend set;
#X text 130 287 add to sent queue ordered by msg_id, f 19;
#X obj 10 256 t a a a;
#X obj 10 29 list split 1;
#X obj 10 231 list append;
#X obj 49 338 map-api \$0/sent-queue;
#X obj 118 241 r \$0/msg-id;
#N canvas 348 99 450 405 clear-old-send-queue 0;
#X obj 15 15 inlet;
#X obj 15 37 list split 1;
#X msg 15 82 each;
#X obj 15 132 list split 1;
#X obj 15 196 <;
#X obj 30 174 - 100;
#X obj 15 59 t b f;
#X obj 15 154 t f f;
#X obj 15 238 f;
#X obj 15 260 list prepend del;
#X obj 15 218 sel 1;
#X text 72 176 find any message older than msg_id - 100;
#X text 125 262 delete it;
#X text 98 36 get out latest msg_id;
#X obj 15 107 map-api \$0/sent-queue;
#X obj 15 286 map-api \$0/sent-queue;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 14 0;
#X connect 3 0 7 0;
#X connect 4 0 10 0;
#X connect 5 0 4 1;
#X connect 6 0 2 0;
#X connect 6 1 5 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 9 0;
#X connect 9 0 15 0;
#X connect 10 0 8 0;
#X connect 14 0 3 0;
#X restore 29 371 pd clear-old-send-queue;
#X connect 1 0 14 0;
#X connect 2 0 4 0;
#X connect 4 0 15 1;
#X connect 5 0 4 1;
#X connect 7 0 11 0;
#X connect 8 0 2 1;
#X connect 10 0 2 0;
#X connect 10 1 9 0;
#X connect 11 0 16 0;
#X connect 13 0 0 0;
#X connect 13 1 18 0;
#X connect 13 2 7 0;
#X connect 14 0 15 0;
#X connect 14 1 10 0;
#X connect 15 0 13 0;
#X connect 17 0 7 1;
#X restore 829 524 pd _send;
#X obj 840 496 r \$0/message-outgoing;
#X obj 829 447 r \$0/state-outgoing;
#X text 891 523 add node_id \, msg_id & add to sent-queue;
#N canvas 225 385 753 300 throttle-states 1;
#X obj 10 8 inlet;
#X obj 10 270 outlet;
#X obj 526 13 r \$0/tick;
#X text 590 12 retry throttled states;
#X obj 99 119 map-api \$0/throttle-queue;
#X obj 72 53 t a a;
#X obj 99 75 list split 1;
#X msg 99 97 get \$1;
#X connect 0 0 1 0;
#X connect 0 0 5 0;
#X connect 5 1 6 0;
#X connect 6 0 7 0;
#X connect 7 0 4 0;
#X restore 829 469 pd throttle-states;
#N canvas 224 380 450 300 msg-id 0;
#X obj 9 14 r \$0/msg-id-bash;
#X obj 39 36 + 1;
#X obj 9 58 s \$0/msg-id;
#X obj 9 36 1;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 3 0 1 0;
#X connect 3 0 2 0;
#X restore 380 373 pd msg-id;
#X obj 886 206 t a b;
#X obj 871 228 t a b;
#N canvas 84 93 450 638 update-last-msg-id 0;
#X obj 10 10 inlet;
#X obj 248 10 r \$0/syncjams/data;
#X obj 248 31 list split 1;
#X obj 81 10 r \$0/syncjams/node-id;
#X obj 10 534 list prepend set;
#X text 174 530 update last-messages map with this node's last msg_id
, f 22;
#X msg 10 116 get \$1;
#X obj 139 234 ==;
#X obj 154 213 - 1;
#X text 119 75 what is the current msg_id from node_id?, f 24;
#X obj 10 183 route bang;
#X msg 10 274 1;
#X msg 67 273 0;
#X obj 10 556 map-api \$0/last-messages;
#X obj 10 139 map-api \$0/last-messages;
#X obj 182 364 <;
#X obj 197 342 - 100;
#X obj 10 71 f;
#X obj 67 71 f;
#X obj 10 32 t b b;
#X obj 178 124 t f f;
#X obj 10 301 f;
#X text 38 302 first time we've seen this id;
#X obj 10 323 sel 1;
#X obj 37 408 list append;
#X obj 10 462 list;
#X obj 139 256 t f f;
#X obj 139 278 sel 1;
#X text 238 339 we've lost track of the other node's messages (older
than 100)., f 21;
#X obj 182 386 sel 1;
#X obj 177 278 s \$0/msg-id-increment;
#X text 166 237 new msg_id is an increment, f 38;
#X obj 37 430 t a a;
#X obj 282 59 print REST;
#X obj 37 507 print new-id;
#X obj 10 484 t a a;
#X obj 67 93 t f a;
#X obj 67 207 t b f f;
#X obj 64 463 print incoming-id;
#X obj 10 93 t f f f;
#X obj 10 161 t a a;
#X obj 209 465 print previous-id;
#X obj 209 440 list prepend;
#X connect 0 0 19 0;
#X connect 1 0 2 0;
#X connect 2 0 18 1;
#X connect 3 0 17 1;
#X connect 4 0 13 0;
#X connect 6 0 14 0;
#X connect 7 0 26 0;
#X connect 8 0 7 1;
#X connect 10 0 11 0;
#X connect 10 1 37 0;
#X connect 11 0 21 0;
#X connect 12 0 21 0;
#X connect 14 0 40 0;
#X connect 15 0 29 0;
#X connect 16 0 15 1;
#X connect 17 0 39 0;
#X connect 18 0 36 0;
#X connect 19 0 17 0;
#X connect 19 1 18 0;
#X connect 20 0 8 0;
#X connect 20 1 16 0;
#X connect 21 0 23 0;
#X connect 23 0 25 0;
#X connect 24 0 32 0;
#X connect 25 0 35 0;
#X connect 26 0 27 0;
#X connect 26 1 30 0;
#X connect 27 0 25 0;
#X connect 29 0 25 0;
#X connect 32 0 25 1;
#X connect 35 0 4 0;
#X connect 35 1 34 0;
#X connect 36 0 20 0;
#X connect 36 1 24 1;
#X connect 37 0 12 0;
#X connect 37 1 7 0;
#X connect 37 2 15 0;
#X connect 39 0 6 0;
#X connect 39 1 24 0;
#X connect 39 2 42 1;
#X connect 40 0 10 0;
#X connect 40 1 42 0;
#X restore 913 252 pd update-last-msg-id;
#X text 511 178 node_id -> msg_id;
#X text 489 205 node_id -> timestamp;
#X text 473 154 address -> node_id msg_id tick timediff values...;
#X text 492 232 msg_id -> message...;
#N canvas 148 198 503 452 state-checksum 0;
#X obj 16 6 r \$0/update-state-checksum;
#X msg 67 158 each;
#X obj 67 180 map-api \$0/states;
#X obj 101 224 list split 3;
#X obj 101 245 unpack f f f;
#X obj 350 308 checksum_djb3;
#X obj 103 349 pack f f f;
#X obj 103 393 s \$0/state-checksum;
#X obj 350 281 list-collect-and-sort;
#X obj 210 308 checksum_djb3;
#X obj 210 281 list-collect-and-sort;
#X obj 70 308 checksum_djb3;
#X obj 70 281 list-collect-and-sort;
#X obj 16 50 t b b b b;
#X obj 67 202 list split 1;
#X obj 21 28 r \$0/arguments-loaded;
#X obj 103 371 list;
#X msg 67 71 length;
#X obj 67 93 map-api \$0/states;
#X obj 67 115 > 0;
#X obj 67 137 sel 1;
#X obj 344 14 r \$0/state-checksum;
#X obj 344 76 list prepend set;
#X obj 344 98 list trim;
#X obj 344 56 spigot 0;
#X obj 389 35 r \$0/debug;
#X msg 344 120;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 2 0 14 0;
#X connect 3 0 4 0;
#X connect 4 0 12 0;
#X connect 4 1 10 0;
#X connect 4 2 8 0;
#X connect 5 0 6 2;
#X connect 6 0 16 0;
#X connect 8 0 5 0;
#X connect 9 0 6 1;
#X connect 10 0 9 0;
#X connect 11 0 6 0;
#X connect 12 0 11 0;
#X connect 13 0 12 1;
#X connect 13 1 10 1;
#X connect 13 2 8 1;
#X connect 13 3 17 0;
#X connect 14 1 3 0;
#X connect 15 0 13 0;
#X connect 16 0 7 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 1 0;
#X connect 21 0 24 0;
#X connect 22 0 23 0;
#X connect 23 0 26 0;
#X connect 24 0 22 0;
#X connect 25 0 24 1;
#X restore 380 399 pd state-checksum;
#X text 376 328 computed data;
#X text 750 447 outgoing >;
#X obj 380 180 map \$0/last-messages;
#X text 955 468 <- TODO;
#X obj 829 70 netreceive -u -b 23232;
#X obj 1106 12 tgl 15 0 \$0/debug empty debug 17 7 0 10 -262144 -1
-1 0 1;
#N canvas 488 318 450 300 init-event 0;
#X text 10 7 wait for all init events: arguments-loaded node-id connected
;
#X obj 11 39 r \$0/arguments-loaded;
#X obj 24 60 r \$0/node-id;
#X obj 38 81 r \$0/connected;
#X obj 11 158 f;
#X obj 41 158 + 1;
#X obj 11 180 sel 2;
#X obj 11 202 s \$0/init-event;
#X msg 11 135 bang;
#X obj 38 103 sel 1;
#X connect 1 0 8 0;
#X connect 2 0 8 0;
#X connect 3 0 9 0;
#X connect 4 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 6 0 7 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X restore 508 94 pd init-event;
#X obj 380 232 map \$0/sent-queue;
#X obj 380 155 map \$0/states;
#X obj 380 259 map \$0/throttle-queue;
#X obj 380 206 map \$0/last-seen;
#X obj 94 606 syncjams-out \$0 init-event;
#N canvas 257 50 460 657 msg-state-ids 0;
#X obj 9 10 inlet;
#X obj 317 10 r \$0/syncjams/data;
#X obj 131 10 r \$0/syncjams/node-id;
#X obj 9 85 list;
#X obj 43 561 route bang;
#X msg 9 295 each;
#X obj 9 317 map-api \$0/states;
#X obj 9 369 list split 1;
#X obj 79 221 list split 2;
#X obj 160 221 t l;
#X obj 79 147 t a b;
#X msg 106 168 clear;
#X obj 106 189 map-api \$0/their-states;
#X obj 79 243 list prepend set;
#X obj 79 265 map-api \$0/their-states;
#X text 77 128 insert their states into a temporary map;
#X obj 9 107 t a a;
#X obj 43 473 unpack f f;
#X msg 43 517 get \$1;
#X text 128 318 for each of our own states;
#X text 191 541 see if it's in their list of states;
#X obj 43 539 map-api \$0/their-states;
#X obj 43 495 t f f;
#X obj 43 391 list split 1;
#X obj 9 340 t a a;
#X obj 43 604 list;
#X obj 43 626 s \$0/re-send-state;
#X text 78 606 if it's not \, re-send the missing state;
#X obj 211 428 r \$0/tick;
#X obj 195 472 <;
#X obj 43 583 spigot 1;
#X obj 111 436 list split 1;
#X obj 77 413 list split 1;
#X obj 211 450 - 2;
#X text 285 431 only re-broadcast missing states older than two ticks.
, f 21;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 3 0 16 0;
#X connect 4 0 30 0;
#X connect 5 0 6 0;
#X connect 6 0 24 0;
#X connect 7 1 23 0;
#X connect 8 0 13 0;
#X connect 8 1 9 0;
#X connect 9 0 8 0;
#X connect 10 0 8 0;
#X connect 10 1 11 0;
#X connect 11 0 12 0;
#X connect 13 0 14 0;
#X connect 16 0 5 0;
#X connect 16 1 10 0;
#X connect 17 0 22 0;
#X connect 18 0 21 0;
#X connect 21 0 4 0;
#X connect 22 0 18 0;
#X connect 23 0 17 0;
#X connect 23 1 32 0;
#X connect 24 0 7 0;
#X connect 24 1 25 1;
#X connect 25 0 26 0;
#X connect 28 0 33 0;
#X connect 29 0 30 1;
#X connect 30 0 25 0;
#X connect 31 0 29 0;
#X connect 32 1 31 0;
#X connect 33 0 29 1;
#X restore 857 357 pd msg-state-ids;
#X obj 829 145 route tick leave state-ids state, f 10;
#N canvas 2 50 450 317 send-state-ids 0;
#X obj 13 252 outlet;
#X obj 13 10 r \$0/broadcast-state-ids;
#X msg 32 57 each;
#X obj 32 79 map-api \$0/states;
#X obj 32 101 list split 1;
#X obj 66 123 list split 2;
#X obj 66 145 list append;
#X obj 144 145 t l;
#X obj 13 167 list;
#X obj 13 35 t b b b;
#X obj 13 211 list prepend /state-ids;
#X obj 82 168 r \$0/node-id;
#X obj 13 189 list prepend;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 1 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 8 1;
#X connect 7 0 6 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 9 1 2 0;
#X connect 9 2 6 1;
#X connect 10 0 0 0;
#X connect 11 0 12 1;
#X connect 12 0 10 0;
#X restore 861 582 pd send-state-ids;
#X msg 558 500 5 2 4;
#X obj 558 522 s \$0/state-checksum;
#X obj 380 284 map \$0/their-states;
#X text 506 283 node_id -> message_id;
#X text 971 610 for re-sending state messages;
#X msg 534 590 set /boingy 9000 1 10000 0.01 hello 1;
#X obj 534 612 map-api \$0/states;
#N canvas 644 264 450 300 re-send-state 0;
#X obj 8 9 r \$0/re-send-state;
#X obj 8 31 list split 1;
#X msg 8 75 /state\$1;
#X obj 8 100 list append;
#X obj 8 54 symbol;
#X obj 8 122 outlet;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 1 3 1;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X restore 865 610 pd re-send-state;
#X obj 550 464 s \$0/update-state-checksum;
#X msg 550 442 bang;
#X text 227 28 optional arguments: bpm=180 namespace=syncjams port=23232
, f 25;
#N canvas 801 290 450 300 re-send-message 0;
#X obj 15 13 r \$0/re-send-message;
#X obj 15 35 t a b;
#X obj 15 57 list split 1;
#X obj 49 78 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 1 3 0;
#X restore 877 635 pd re-send-message;
#X obj 378 622 r \$0/msg-id-increment;
#X obj 378 664 print msg-id-increment;
#X obj 378 644 sel 1;
#X text 516 259 address -> timestamp state-message...;
#X connect 0 0 13 0;
#X connect 0 1 5 1;
#X connect 0 1 8 1;
#X connect 0 2 21 0;
#X connect 1 0 26 0;
#X connect 3 0 2 0;
#X connect 5 0 7 0;
#X connect 9 0 72 0;
#X connect 13 0 81 0;
#X connect 21 0 23 0;
#X connect 21 1 22 0;
#X connect 25 0 33 0;
#X connect 25 1 27 0;
#X connect 26 0 30 0;
#X connect 26 1 28 0;
#X connect 27 0 31 0;
#X connect 27 1 29 0;
#X connect 28 0 32 0;
#X connect 28 1 25 0;
#X connect 29 0 34 0;
#X connect 36 0 52 0;
#X connect 37 0 52 0;
#X connect 38 0 52 0;
#X connect 39 0 52 0;
#X connect 40 0 52 0;
#X connect 41 0 52 0;
#X connect 42 0 52 0;
#X connect 52 0 18 0;
#X connect 53 0 10 0;
#X connect 54 0 10 0;
#X connect 55 0 54 0;
#X connect 56 0 58 0;
#X connect 58 0 54 0;
#X connect 60 0 5 0;
#X connect 60 1 62 0;
#X connect 61 0 8 0;
#X connect 61 1 62 0;
#X connect 72 0 0 0;
#X connect 79 0 52 0;
#X connect 81 0 4 0;
#X connect 81 1 6 0;
#X connect 81 2 80 0;
#X connect 81 3 61 0;
#X connect 81 4 60 0;
#X connect 82 0 10 0;
#X connect 83 0 84 0;
#X connect 88 0 89 0;
#X connect 90 0 10 0;
#X connect 92 0 91 0;
#X connect 94 0 10 0;
#X connect 95 0 97 0;
#X connect 97 0 96 0;
