#N canvas 382 212 1209 666 10;
#N canvas 268 222 450 360 parse-osc-message 0;
#X obj 10 13 inlet;
#N canvas 400 118 450 300 count-address-components 0;
#X obj 15 8 inlet;
#X obj 15 270 outlet;
#X obj 80 270 outlet;
#X obj 126 122 t l;
#X obj 46 188 sel 47;
#X obj 46 210 f;
#X obj 76 210 + 1;
#X msg 62 101 0;
#X obj 46 122 list split 1;
#X obj 30 232 f;
#X obj 93 188 sel 0;
#X obj 15 30 t a b a b b;
#X msg 78 78 1;
#X obj 46 144 spigot 1;
#X msg 103 210 0;
#X text 174 124 count the number of / characters (47) before the first
null character (0)., f 22;
#X obj 46 166 t a a;
#N canvas 1004 276 450 300 list-reverse 0;
#X obj 11 8 inlet;
#X obj 30 90 list split 1;
#X obj 113 90 t l;
#X obj 114 112 t l;
#X obj 11 148 list;
#X obj 11 30 t b a b;
#X obj 30 112 list prepend;
#X obj 11 170 outlet;
#X connect 0 0 5 0;
#X connect 1 0 6 0;
#X connect 1 1 2 0;
#X connect 2 0 1 0;
#X connect 3 0 6 1;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 5 1 1 0;
#X connect 5 2 6 1;
#X connect 6 0 3 0;
#X connect 6 0 4 1;
#X restore 46 52 pd list-reverse;
#X connect 0 0 11 0;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 0 9 1;
#X connect 6 0 5 1;
#X connect 7 0 5 1;
#X connect 8 0 13 0;
#X connect 8 1 3 0;
#X connect 9 0 2 0;
#X connect 10 0 14 0;
#X connect 11 0 1 0;
#X connect 11 1 9 0;
#X connect 11 2 17 0;
#X connect 11 3 7 0;
#X connect 11 4 12 0;
#X connect 12 0 13 1;
#X connect 13 0 16 0;
#X connect 14 0 13 1;
#X connect 16 0 4 0;
#X connect 16 1 10 0;
#X connect 17 0 8 0;
#X restore 10 35 pd count-address-components;
#X obj 10 154 list split;
#X obj 10 101 route syncjams;
#X obj 10 79 list trim;
#X obj 10 57 oscparse;
#X obj 10 267 list split 1;
#X obj 10 303 outlet action;
#X obj 101 303 outlet address;
#X obj 198 303 outlet data;
#X obj 91 79 r \$0/argument/namespace;
#X obj 38 198 route v1;
#X obj 10 243 list;
#X obj 38 220 t b a;
#X obj 38 176 list trim;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 1 1 2 1;
#X connect 2 0 12 0;
#X connect 2 1 14 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 10 0 3 1;
#X connect 11 0 13 0;
#X connect 12 0 6 0;
#X connect 13 0 12 1;
#X connect 13 1 9 0;
#X connect 14 0 11 0;
#X restore 829 93 pd parse-osc-message;
#X obj 829 70 netreceive -u -b 23232;
#X obj 13 10 inlet;
#N canvas 699 132 342 652 parse-named-arguments 0;
#X obj 11 11 loadbang;
#X obj 38 85 list split 1;
#X obj 121 85 t l;
#X text 153 84 <- serialize;
#X obj 57 165 list fromsymbol;
#X obj 78 211 list split 1;
#X obj 159 211 t l;
#X obj 78 278 list append;
#X obj 153 278 t l;
#X obj 57 304 list;
#X obj 57 187 t b a b;
#X obj 57 331 list tosymbol;
#X obj 38 408 list;
#X obj 140 374 t l;
#X obj 57 353 list;
#X obj 38 111 t b a b;
#X obj 57 140 symbol;
#X obj 57 374 list append;
#X obj 38 429 list trim;
#X obj 78 255 t b b b;
#X obj 78 233 sel 61;
#X obj 38 63 list append \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8;
#X obj 38 451 route bang;
#X obj 71 11 inlet;
#X obj 95 475 list split 1;
#X obj 95 503 list prepend;
#X obj 95 525 list prepend \$0;
#X obj 11 33 t b b;
#X obj 11 575 \$0;
#X msg 11 597 \; \$1/arguments-loaded bang;
#X msg 95 547 \; \$1/argument/\$3 \$2;
#X connect 0 0 27 0;
#X connect 1 0 15 0;
#X connect 1 1 2 0;
#X connect 2 0 1 0;
#X connect 4 0 10 0;
#X connect 5 0 20 0;
#X connect 5 1 6 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 7 0 9 1;
#X connect 8 0 7 1;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 10 1 5 0;
#X connect 10 2 7 1;
#X connect 11 0 14 0;
#X connect 12 0 18 0;
#X connect 13 0 17 1;
#X connect 14 0 17 0;
#X connect 15 0 12 0;
#X connect 15 1 16 0;
#X connect 15 2 17 1;
#X connect 16 0 4 0;
#X connect 17 0 13 0;
#X connect 17 0 12 1;
#X connect 18 0 22 0;
#X connect 19 0 9 1;
#X connect 19 1 9 0;
#X connect 19 2 7 1;
#X connect 20 0 19 0;
#X connect 20 1 7 0;
#X connect 21 0 1 0;
#X connect 22 1 24 0;
#X connect 23 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 25 1;
#X connect 25 0 26 0;
#X connect 26 0 30 0;
#X connect 27 0 28 0;
#X connect 27 1 21 0;
#X connect 28 0 29 0;
#X restore 508 64 pd parse-named-arguments;
#X msg 508 43 bang;
#N canvas 463 1373 450 318 msg-tick 0;
#X obj 9 11 inlet;
#X obj 9 56 list;
#X obj 207 17 r \$0/syncjams/node-id;
#X obj 71 17 r \$0/syncjams/data;
#X obj 9 128 list split 1;
#X text 95 124 first element = what node-id thinks current tick is
, f 29;
#X text 128 159 next three elements are state checksum, f 23;
#X obj 77 196 list split 2;
#X obj 157 196 t l;
#X text 187 191 remaining elements are last message ids for each node
, f 28;
#N canvas 524 1128 365 300 handle-network-tick 0;
#X obj 13 8 inlet;
#X obj 28 52 r \$0/tick;
#X obj 13 76 >;
#X text 113 33 if a tick from the network is higher than our current
tick then bash our own tick into the new sync., f 32;
#X obj 13 98 sel 1;
#X obj 13 30 t f f;
#X obj 13 120 f;
#X obj 13 142 s \$0/tick-bash;
#X connect 0 0 5 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 4 0 6 0;
#X connect 5 0 2 0;
#X connect 5 1 6 1;
#X connect 6 0 7 0;
#X restore 9 269 pd handle-network-tick;
#N canvas 226 1128 450 300 handle-state-checksum 0;
#X obj 12 10 inlet;
#X restore 43 244 pd handle-state-checksum;
#N canvas 226 1128 450 300 handle-message-ids 0;
#X obj 6 9 inlet;
#X restore 77 218 pd handle-message-ids;
#N canvas 2 50 450 300 update-last-seen 0;
#X obj 9 8 inlet;
#X obj 43 52 list prepend get;
#X obj 72 198 timer;
#X obj 9 219 list append;
#X obj 9 241 list prepend set;
#X obj 43 142 f;
#X obj 9 30 t f b f f;
#X obj 43 164 s \$0/joined;
#X text 122 151 notify user with "joined" callback if first seen node-id
, f 35;
#X text 144 263 add/update their node-id time in last-seen map;
#X obj 43 98 route bang;
#X obj 43 76 map-api \$0/last-seen;
#X obj 9 263 map-api \$0/last-seen;
#X connect 0 0 6 0;
#X connect 1 0 11 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 4 0 12 0;
#X connect 5 0 7 0;
#X connect 6 0 3 0;
#X connect 6 1 2 1;
#X connect 6 2 1 0;
#X connect 6 3 5 1;
#X connect 10 0 5 0;
#X connect 11 0 10 0;
#X restore 142 86 pd update-last-seen;
#X obj 142 66 f;
#X obj 9 33 t b b;
#X text 265 75 check if node joined \, update last-seen map., f 22
;
#X obj 43 166 list split 4;
#X connect 0 0 15 0;
#X connect 1 0 4 0;
#X connect 2 0 14 1;
#X connect 3 0 1 1;
#X connect 4 0 10 0;
#X connect 4 1 17 0;
#X connect 7 0 12 0;
#X connect 7 1 8 0;
#X connect 8 0 7 0;
#X connect 14 0 13 0;
#X connect 15 0 1 0;
#X connect 15 1 14 0;
#X connect 17 0 11 0;
#X connect 17 1 7 0;
#X restore 829 411 pd msg-tick;
#X obj 886 278 list append;
#N canvas 51 198 450 300 msg-leave 0;
#X obj 9 10 inlet;
#X obj 54 10 r \$0/syncjams/node-id;
#X obj 9 63 s \$0/forget-node;
#X obj 9 43 f;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 3 0 2 0;
#X restore 843 384 pd msg-leave;
#N canvas 226 1128 450 300 msg-message 0;
#X obj 6 6 inlet address;
#X obj 6 30 re-slash-osc-address;
#X obj 148 6 r \$0/syncjams/node-id;
#X obj 297 7 r \$0/syncjams/data;
#X obj 85 164 list append;
#X obj 297 29 list split 1;
#X text 227 43 message id;
#X obj 85 189 s \$0/message;
#X obj 85 142 list prepend;
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 2 0 8 1;
#X connect 3 0 5 0;
#X connect 4 0 7 0;
#X connect 5 1 4 1;
#X connect 8 0 4 0;
#X restore 886 303 pd msg-message;
#N canvas 2 50 450 300 msg-state-hash 0;
#X obj 9 10 inlet;
#X obj 317 10 r \$0/syncjams/data;
#X obj 131 10 r \$0/syncjams/node-id;
#X restore 857 357 pd msg-state-hash;
#N canvas 209 379 1030 423 msg-state 0;
#X obj 217 49 re-slash-osc-address;
#X obj 268 253 r \$0/syncjams/node-id;
#X obj 602 65 r \$0/syncjams/data;
#X obj 205 298 list append;
#X text 541 152 message id;
#X obj 407 384 s \$0/state;
#X obj 608 149 list split 1;
#X obj 642 173 list split 1;
#X text 607 177 tick;
#X obj 676 198 list split 1;
#X obj 184 157 list prepend get;
#X obj 184 181 map-api \$0/states;
#X text 83 163 get the state >;
#X obj 217 27 inlet;
#X obj 184 203 route bang;
#X obj 184 368 list prepend set;
#X text 53 187 don't have key yet >;
#X text 619 206 timediff;
#X obj 205 320 list append;
#X obj 581 112 t a a;
#X obj 299 276 list split 3;
#X obj 378 230 unpack f f f f;
#X obj 184 101 symbol;
#X obj 581 89 list;
#X obj 13 33 s \$0/got-state;
#X obj 419 23 r \$0/got-state;
#X obj 419 45 t b b;
#X obj 14 380 s \$0/update-state-checksum;
#X obj 428 315 list prepend;
#X obj 184 123 t a a a;
#X obj 413 284 r \$0/syncjams/node-id;
#X obj 428 337 list append;
#X obj 184 343 list;
#X obj 205 276 list append;
#X obj 407 360 list;
#X obj 184 229 s \$0/update-state;
#X obj 630 331 ||;
#X obj 645 286 ==;
#X obj 621 236 t f f;
#X obj 645 309 &&;
#X obj 56 274 r \$0/update-state;
#X obj 606 286 <;
#X obj 675 286 <;
#X obj 630 375 s \$0/update-state;
#X text 720 280 if this state update's tick is greater than last seen
\, or if it's equal to last seen but time diff is greater \, then we
have a new state \, so output \, update state table \, and update checksums.
, f 44;
#X text 375 180 last state = node_id msg_id tick timediff, f 16;
#X obj 13 11 inlet bang-on-state-received;
#X obj 184 392 map-api \$0/states;
#X obj 630 353 sel 1;
#X obj 56 296 t b b b;
#X connect 0 0 22 1;
#X connect 1 0 33 1;
#X connect 2 0 23 1;
#X connect 3 0 18 0;
#X connect 6 1 7 0;
#X connect 7 0 38 0;
#X connect 7 1 9 0;
#X connect 9 0 42 1;
#X connect 9 1 18 1;
#X connect 9 1 31 1;
#X connect 10 0 11 0;
#X connect 11 0 14 0;
#X connect 13 0 0 0;
#X connect 14 0 35 0;
#X connect 14 1 21 0;
#X connect 15 0 47 0;
#X connect 18 0 32 1;
#X connect 19 0 20 0;
#X connect 19 1 6 0;
#X connect 20 0 3 1;
#X connect 21 2 41 0;
#X connect 21 2 37 0;
#X connect 21 3 42 0;
#X connect 22 0 29 0;
#X connect 23 0 19 0;
#X connect 25 0 26 0;
#X connect 26 0 22 0;
#X connect 26 1 23 0;
#X connect 28 0 31 0;
#X connect 29 0 10 0;
#X connect 29 1 33 0;
#X connect 29 2 28 0;
#X connect 30 0 28 1;
#X connect 31 0 34 1;
#X connect 32 0 15 0;
#X connect 33 0 3 0;
#X connect 34 0 5 0;
#X connect 36 0 48 0;
#X connect 37 0 39 0;
#X connect 38 0 41 1;
#X connect 38 1 37 1;
#X connect 39 0 36 1;
#X connect 40 0 49 0;
#X connect 41 0 36 0;
#X connect 42 0 39 1;
#X connect 46 0 24 0;
#X connect 48 0 43 0;
#X connect 49 0 27 0;
#X connect 49 1 34 0;
#X connect 49 2 32 0;
#X restore 871 329 pd msg-state;
#N canvas 99 266 334 101 change-port 0;
#X msg 10 52 port \$1;
#X obj 10 74 outlet;
#X obj 10 8 r \$0/argument/port;
#X obj 10 30 list;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X restore 829 47 pd change-port;
#N canvas 582 203 756 703 syncjams-sender 0;
#X obj 11 9 inlet;
#X obj 180 319 t f f;
#X obj 270 319 t f f;
#X obj 279 271 spigot 0;
#X obj 190 270 spigot 0;
#X obj 180 361 s \$1/connected;
#X obj 11 58 list prepend send;
#X obj 11 103 t a a;
#X obj 11 80 list trim;
#X obj 180 340 pipe 1;
#X obj 270 297 netsend -u -b;
#X obj 180 297 netsend -u -b;
#N canvas 682 205 450 300 oscformat 0;
#X obj 10 5 inlet;
#X obj 10 250 outlet;
#X obj 10 29 list split 1;
#X obj 10 104 list;
#X obj 10 51 t b a;
#X obj 170 53 r \$0/argument/namespace;
#X obj 47 77 list prepend syncjams;
#X msg 47 104 set /\$1\$2;
#X obj 131 235 print OSC;
#X obj 10 127 list prepend v1;
#X obj 10 227 oscformat -b si;
#X obj 131 213 list prepend;
#X obj 166 185 list split 1;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 1;
#X connect 3 0 9 0;
#X connect 4 0 3 0;
#X connect 4 1 6 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 7 0 10 0;
#X connect 7 0 12 0;
#X connect 9 0 10 0;
#X connect 9 0 11 0;
#X connect 10 0 1 0;
#X connect 11 0 8 0;
#X connect 12 1 11 1;
#X restore 11 35 pd oscformat;
#X msg 270 204 connect 192.168.43.255 23232;
#X msg 180 181 connect 255.255.255.255 23232;
#X obj 180 51 r \$0/arguments-loaded;
#X obj 180 138 23232;
#X obj 180 159 t f f;
#X obj 207 73 r \$0/argument/port;
#X obj 207 95 list;
#X obj 207 117 f;
#X connect 0 0 12 0;
#X connect 1 0 9 0;
#X connect 1 1 4 1;
#X connect 2 0 9 0;
#X connect 2 1 3 1;
#X connect 3 0 10 0;
#X connect 4 0 11 0;
#X connect 6 0 8 0;
#X connect 7 0 4 0;
#X connect 7 1 3 0;
#X connect 8 0 7 0;
#X connect 9 0 5 0;
#X connect 10 0 2 0;
#X connect 11 0 1 0;
#X connect 12 0 6 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 14 0;
#X connect 17 1 13 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 16 1;
#X restore 829 628 pd syncjams-sender;
#X text 506 11 distribute arguments passed in by the user., f 25;
#X text 826 11 routing of incoming syncjams osc messages from the network
, f 31;
#X obj 829 145 route tick leave state-hash state, f 10;
#X obj 829 115 list trim;
#X text 378 133 data stores;
#N canvas 185 192 450 300 node-id 0;
#X obj 14 14 r \$0/arguments-loaded;
#X obj 14 36 uid;
#X obj 14 59 s \$0/node-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 380 317 pd node-id;
#N canvas 226 1128 450 313 metronome 0;
#X obj 50 247 + 1;
#X obj 20 247 f;
#X obj 20 269 s \$0/tick;
#X obj 20 29 r \$0/tick-bash;
#X obj 20 51 t b f;
#X obj 95 80 r \$0/argument/bpm;
#X obj 95 202 expr 60000 / $f1;
#X obj 20 225 metro 333.333;
#X obj 258 31 r \$0/arguments-loaded;
#X msg 258 53 0;
#X obj 258 75 s \$0/tick-bash;
#X obj 114 148 r \$0/state;
#X obj 114 170 route /BPM;
#X text 110 112 special bpm change from the network., f 18;
#X connect 0 0 1 1;
#X connect 1 0 0 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 4 1 1 1;
#X connect 5 0 6 0;
#X connect 6 0 7 1;
#X connect 7 0 1 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 11 0 12 0;
#X connect 12 0 6 0;
#X restore 545 318 pd metronome;
#X text 543 299 core timing;
#X obj 15 638 outlet;
#X text 544 349 procedures;
#N canvas 338 1128 450 300 forget-nodes 0;
#X obj 13 14 r \$0/forget-nodes;
#X obj 13 114 r \$0/forget-node;
#X restore 546 367 pd forget-nodes;
#X obj 946 115 list split 1;
#X obj 980 140 s \$0/syncjams/data;
#X obj 946 167 s \$0/syncjams/node-id;
#X text 12 393 outgoing api;
#X obj 13 229 route get-node-id;
#X obj 13 129 route get-state;
#X obj 13 279 route set-state;
#X obj 13 179 route get-node-list;
#X obj 13 329 route send;
#N canvas 704 1193 450 300 get-state 0;
#X obj 13 10 inlet;
#X obj 40 55 list prepend get;
#X obj 40 77 map-api \$0/states;
#X obj 13 32 t a a;
#X obj 82 167 list split 1;
#X obj 116 189 list split 3;
#X obj 13 259 s \$0/state;
#X obj 13 187 list prepend;
#X obj 13 209 list append;
#X obj 40 99 route bang;
#X obj 13 231 spigot 1;
#X obj 40 121 t b b;
#X msg 40 143 0;
#X obj 97 121 t a b;
#X msg 124 142 1;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 7 0;
#X connect 3 1 1 0;
#X connect 4 0 7 1;
#X connect 4 1 5 0;
#X connect 5 1 8 1;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 9 1 13 0;
#X connect 10 0 6 0;
#X connect 11 0 12 0;
#X connect 11 1 6 0;
#X connect 12 0 10 1;
#X connect 13 0 4 0;
#X connect 13 1 14 0;
#X connect 14 0 10 1;
#X restore 13 151 pd get-state;
#N canvas 2 50 450 300 set-state 0;
#X obj 9 8 inlet;
#X obj 9 35 list split 1;
#X obj 43 108 list prepend;
#X obj 121 79 timer;
#X obj 94 35 r \$0/tick;
#X obj 43 130 list prepend;
#X obj 94 57 t f b;
#X obj 43 57 t a b;
#X text 58 8 /address last_tick time_since_last_tick val1 val2 val3
...;
#X text 127 109 time since last tick;
#X text 129 130 last tick;
#X obj 9 185 list append;
#X obj 9 207 s \$0/state-outgoing;
#X msg 9 161 list /state\$1;
#X connect 0 0 1 0;
#X connect 1 0 13 0;
#X connect 1 1 7 0;
#X connect 2 0 5 0;
#X connect 3 0 2 1;
#X connect 4 0 6 0;
#X connect 5 0 11 1;
#X connect 6 0 5 1;
#X connect 6 1 3 0;
#X connect 7 0 2 0;
#X connect 7 1 3 1;
#X connect 11 0 12 0;
#X connect 13 0 11 0;
#X restore 13 301 pd set-state;
#N canvas 373 105 450 300 get-node-list 0;
#X obj 10 13 inlet;
#X msg 29 55 each;
#X obj 29 77 map-api \$0/last-seen;
#X obj 29 99 list split 1;
#X obj 109 121 t l;
#X obj 10 143 list;
#X obj 10 165 s \$0/node-list;
#X obj 29 121 list prepend;
#X obj 10 35 t b b b;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 7 1;
#X connect 5 0 6 0;
#X connect 7 0 4 0;
#X connect 7 0 5 1;
#X connect 8 0 5 0;
#X connect 8 1 1 0;
#X connect 8 2 7 1;
#X restore 13 201 pd get-node-list;
#N canvas 226 1128 450 300 get-node-id 0;
#X obj 13 13 inlet;
#X obj 13 35 f;
#X obj 13 57 s \$0/node-id;
#X obj 55 13 r \$0/node-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 1 1;
#X restore 13 251 pd get-node-id;
#N canvas 2 50 450 300 send 0;
#X obj 11 11 inlet;
#X obj 11 35 s \$0/message-outgoing;
#X connect 0 0 1 0;
#X restore 13 351 pd send;
#X text 31 35 incoming api: get-state set-state get-node-list get-node-id
send, f 14;
#X obj 15 414 syncjams-out \$0 tick;
#X obj 25 442 syncjams-out \$0 node-id;
#X obj 35 472 syncjams-out \$0 message;
#X obj 45 502 syncjams-out \$0 state;
#X obj 55 532 syncjams-out \$0 joined;
#X obj 65 562 syncjams-out \$0 left;
#X obj 75 592 syncjams-out \$0 node-list;
#X text 180 442 my-node-id;
#X text 156 415 tick-number;
#X text 202 532 node-id;
#X text 203 562 node-id;
#X text 243 592 node-id-1 node-id-2 node-id-3...;
#X text 186 472 from-node-id /address-key message-values...;
#X text 185 502 from-node-id /address-key state-values...;
#X text 69 352 /address-key message-values...;
#X text 98 302 /address-key state-values...;
#X obj 15 617 list trim;
#N canvas 213 255 450 300 send-tick 0;
#X obj 12 270 outlet;
#X obj 13 13 r \$0/tick;
#X obj 13 35;
#X connect 1 0 2 0;
#X restore 845 563 pd send-tick;
#N canvas 2 50 450 300 send-state-hash 0;
#X obj 9 274 outlet;
#X restore 861 592 pd send-state-hash;
#N canvas 38 551 450 473 _send 0;
#X obj 10 399 outlet;
#X obj 10 7 inlet;
#X obj 44 142 list prepend;
#X text 127 142 add new msg_id;
#X obj 44 194 list prepend;
#X obj 113 171 r \$0/node-id;
#X text 127 195 add node_id;
#X obj 49 294 list prepend;
#X obj 113 119 r \$0/msg-id;
#X obj 71 90 s \$0/msg-id-bash;
#X obj 44 69 t a b;
#X obj 49 316 list prepend set;
#N canvas 351 114 450 405 clear-old-states 0;
#X obj 15 15 inlet;
#X obj 15 37 list split 1;
#X msg 15 82 each;
#X obj 15 132 list split 1;
#X obj 15 196 <;
#X obj 30 174 - 100;
#X obj 15 59 t b f;
#X obj 15 154 t f f;
#X obj 15 238 f;
#X obj 15 260 list prepend del;
#X obj 15 218 sel 1;
#X text 72 176 find any message older than msg_id - 100;
#X text 125 262 delete it;
#X text 98 36 get out latest msg_id;
#X obj 15 107 map-api \$0/sent-queue;
#X obj 15 286 map-api \$0/sent-queue;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 14 0;
#X connect 3 0 7 0;
#X connect 4 0 10 0;
#X connect 5 0 4 1;
#X connect 6 0 2 0;
#X connect 6 1 5 0;
#X connect 7 0 4 0;
#X connect 7 1 8 1;
#X connect 8 0 9 0;
#X connect 9 0 15 0;
#X connect 10 0 8 0;
#X connect 14 0 3 0;
#X restore 29 371 pd clear-old-states;
#X text 130 287 add to sent queue ordered by msg_id, f 19;
#X obj 10 256 t a a a;
#X obj 10 29 list split 1;
#X obj 10 231 list append;
#X obj 49 338 map-api \$0/sent-queue;
#X obj 118 241 r \$0/msg-id;
#X connect 1 0 15 0;
#X connect 2 0 4 0;
#X connect 4 0 16 1;
#X connect 5 0 4 1;
#X connect 7 0 11 0;
#X connect 8 0 2 1;
#X connect 10 0 2 0;
#X connect 10 1 9 0;
#X connect 11 0 17 0;
#X connect 14 0 0 0;
#X connect 14 1 12 0;
#X connect 14 2 7 0;
#X connect 15 0 16 0;
#X connect 15 1 10 0;
#X connect 16 0 14 0;
#X connect 18 0 7 1;
#X restore 829 534 pd _send;
#X obj 848 501 r \$0/message-outgoing;
#X obj 829 457 r \$0/state-outgoing;
#X text 891 533 add node_id \, msg_id & add to sent-queue;
#N canvas 226 1128 753 300 throttle-states 0;
#X obj 10 8 inlet;
#X obj 10 270 outlet;
#X obj 526 13 r \$0/tick;
#X text 590 12 retry throttled states;
#X connect 0 0 1 0;
#X restore 829 479 pd throttle-states;
#N canvas 226 1128 450 300 msg-id 0;
#X obj 9 14 r \$0/msg-id-bash;
#X obj 9 36 f;
#X obj 39 36 + 1;
#X obj 9 58 s \$0/msg-id;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X restore 380 343 pd msg-id;
#X obj 886 206 t a b;
#X obj 871 228 t a b;
#N canvas 159 168 450 539 update-last-msg-id 0;
#X obj 10 10 inlet;
#X obj 188 10 r \$0/syncjams/data;
#X obj 188 31 list split 1;
#X obj 51 10 r \$0/syncjams/node-id;
#X obj 51 298 list append;
#X obj 10 332 list;
#X obj 10 354 list prepend set;
#X text 174 350 update last-messages map with this node's last msg_id
, f 22;
#X msg 78 74 get \$1;
#X obj 188 53 t f f;
#X obj 51 32 t f f;
#X obj 78 152 ==;
#X obj 215 74 - 1;
#X obj 78 216 ||;
#X text 243 95 what is the current msg_id from node_id?, f 24;
#X obj 10 256 spigot;
#X text 196 152 if the new msg_id is increment or we've never seen
the node before \, let it through., f 38;
#X obj 78 121 t f a b;
#X obj 104 152 route bang;
#X msg 104 174 1;
#X msg 161 173 0;
#X obj 10 376 map-api \$0/last-messages;
#X obj 78 99 map-api \$0/last-messages;
#X connect 0 0 15 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 10 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 6 0 21 0;
#X connect 8 0 22 0;
#X connect 9 0 4 1;
#X connect 9 1 12 0;
#X connect 10 0 4 0;
#X connect 10 1 8 0;
#X connect 11 0 13 0;
#X connect 12 0 11 1;
#X connect 13 0 15 1;
#X connect 15 0 5 0;
#X connect 17 0 11 0;
#X connect 17 1 18 0;
#X connect 18 0 19 0;
#X connect 18 1 20 0;
#X connect 19 0 13 1;
#X connect 20 0 13 1;
#X connect 22 0 17 0;
#X restore 913 252 pd update-last-msg-id;
#X text 511 178 node_id -> msg_id;
#X text 489 205 node_id -> timestamp;
#X text 473 154 address -> node_id msg_id tick timediff values...;
#X text 492 232 msg_id -> message...;
#X text 516 259 address-> timestamp message...;
#N canvas 156 290 503 318 state-checksum 0;
#X obj 16 6 r \$0/update-state-checksum;
#X msg 67 56 each;
#X obj 67 78 map-api \$0/states;
#X obj 101 122 list split 3;
#X obj 101 143 unpack f f f;
#X obj 350 206 checksum_djb3;
#X obj 103 247 pack f f f;
#X obj 103 291 s \$0/state-checksum;
#X obj 103 269 list prepend djb3;
#X obj 350 179 list-collect-and-sort;
#X obj 210 206 checksum_djb3;
#X obj 210 179 list-collect-and-sort;
#X obj 70 206 checksum_djb3;
#X obj 70 179 list-collect-and-sort;
#X obj 16 28 t b b b b;
#X obj 67 100 list split 1;
#X connect 0 0 14 0;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 3 0 4 0;
#X connect 4 0 13 0;
#X connect 4 1 11 0;
#X connect 4 2 9 0;
#X connect 5 0 6 2;
#X connect 6 0 8 0;
#X connect 8 0 7 0;
#X connect 9 0 5 0;
#X connect 10 0 6 1;
#X connect 11 0 10 0;
#X connect 12 0 6 0;
#X connect 13 0 12 0;
#X connect 14 0 13 1;
#X connect 14 1 11 1;
#X connect 14 2 9 1;
#X connect 14 3 1 0;
#X connect 15 1 3 0;
#X restore 380 369 pd state-checksum;
#X text 376 298 computed data;
#X text 750 457 outgoing >;
#X text 227 28 optional arguments: bpm=180 initial=text-object-name
namespace=syncjams port=23232, f 25;
#X obj 380 232 map \$0/sent-queue;
#X obj 380 155 map \$0/states;
#X obj 380 259 map \$0/throttle-queue;
#X obj 380 180 map \$0/last-messages;
#X obj 380 206 map \$0/last-seen;
#X text 955 478 <- TODO;
#X text 930 563 <- TODO;
#X text 982 592 <- TODO;
#X text 905 411 <- TODO (hndle state checksum & msg_ids);
#X text 651 367 <- TODO;
#X obj 535 491 r \$0/state-checksum;
#X obj 535 513 print checksum;
#X connect 0 0 16 0;
#X connect 0 1 6 1;
#X connect 0 1 10 1;
#X connect 0 2 24 0;
#X connect 1 0 0 0;
#X connect 2 0 29 0;
#X connect 4 0 3 0;
#X connect 6 0 8 0;
#X connect 11 0 1 0;
#X connect 15 0 5 0;
#X connect 15 1 7 0;
#X connect 15 2 9 0;
#X connect 15 3 65 0;
#X connect 15 4 64 0;
#X connect 16 0 15 0;
#X connect 24 0 26 0;
#X connect 24 1 25 0;
#X connect 28 0 36 0;
#X connect 28 1 30 0;
#X connect 29 0 33 0;
#X connect 29 1 31 0;
#X connect 30 0 34 0;
#X connect 30 1 32 0;
#X connect 31 0 35 0;
#X connect 31 1 28 0;
#X connect 32 0 37 0;
#X connect 39 0 55 0;
#X connect 40 0 55 0;
#X connect 41 0 55 0;
#X connect 42 0 55 0;
#X connect 43 0 55 0;
#X connect 44 0 55 0;
#X connect 45 0 55 0;
#X connect 55 0 21 0;
#X connect 58 0 12 0;
#X connect 59 0 58 0;
#X connect 60 0 62 0;
#X connect 62 0 58 0;
#X connect 64 0 6 0;
#X connect 64 1 66 0;
#X connect 65 0 10 0;
#X connect 65 1 66 0;
#X connect 86 0 87 0;
